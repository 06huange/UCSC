==9349== Memcheck, a memory error detector
==9349== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9349== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==9349== Command: ./yshell
==9349== 
yshell: Bad: no such function
==9349== 
==9349== HEAP SUMMARY:
==9349==     in use at exit: 1,270 bytes in 33 blocks
==9349==   total heap usage: 237 allocs, 204 frees, 8,038 bytes allocated
==9349== 
==9349== 1,270 (40 direct, 1,230 indirect) bytes in 1 blocks are definitely lost in loss record 11 of 11
==9349==    at 0x4C2A483: operator new(unsigned long) (vg_replace_malloc.c:344)
==9349==    by 0x414F03: __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h:111)
==9349==    by 0x414A4A: std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&, unsigned long) (alloc_traits.h:436)
==9349==    by 0x41411B: std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<inode, std::allocator<inode>, (__gnu_cxx::_Lock_policy)2> >&) (allocated_ptr.h:97)
==9349==    by 0x413754: std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<inode, std::allocator<inode>, file_type>(inode*&, std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:675)
==9349==    by 0x412A8F: std::__shared_ptr<inode, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr_base.h:1342)
==9349==    by 0x411862: std::shared_ptr<inode>::shared_ptr<std::allocator<inode>, file_type>(std::_Sp_alloc_shared_tag<std::allocator<inode> >, file_type&&) (shared_ptr.h:359)
==9349==    by 0x410A1E: std::shared_ptr<inode> std::allocate_shared<inode, std::allocator<inode>, file_type>(std::allocator<inode> const&, file_type&&) (shared_ptr.h:706)
==9349==    by 0x40FF92: std::shared_ptr<inode> std::make_shared<inode, file_type>(file_type&&) (shared_ptr.h:722)
==9349==    by 0x40E0E2: inode_state::inode_state() (file_sys.cpp:31)
==9349==    by 0x41718B: main (main.cpp:50)
==9349== 
==9349== LEAK SUMMARY:
==9349==    definitely lost: 40 bytes in 1 blocks
==9349==    indirectly lost: 1,230 bytes in 32 blocks
==9349==      possibly lost: 0 bytes in 0 blocks
==9349==    still reachable: 0 bytes in 0 blocks
==9349==         suppressed: 0 bytes in 0 blocks
==9349== 
==9349== For counts of detected and suppressed errors, rerun with: -v
==9349== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
