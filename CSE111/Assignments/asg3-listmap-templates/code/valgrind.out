==19480== Memcheck, a memory error detector
==19480== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19480== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==19480== Command: keyvalue test1.in test2.in test3.in
==19480== 
test1.in: 1: a=b
a = b
test1.in: 2: key=value
key = value
test1.in: 3: this=is a test
this = is a test
test1.in: 4: this
this = is a test
test1.in: 5: key
key = value
test1.in: 6: a
a = b
test1.in: 7: # $Id: test1.in,v 1.1 2016-06-28 14:48:38-07 - - $
test2.in: 1: key=value
key = value
test2.in: 2: second=third
second = third
test2.in: 3: foo=bar
foo = bar
test2.in: 4: f1=51
f1 = 51
test2.in: 5: f2=52
f2 = 52
test2.in: 6: foobar=baz
foobar = baz
test2.in: 7: baz=quux
baz = quux
test2.in: 8: this=is=a=test
this = is=a=test
test2.in: 9: =
a = b
baz = quux
f1 = 51
f2 = 52
foo = bar
foobar = baz
key = value
second = third
this = is=a=test
test2.in: 10: a=value
a = value
test2.in: 11: b=value
b = value
test2.in: 12: =value
a = value
b = value
key = value
==19480== Conditional jump or move depends on uninitialised value(s)
==19480==    at 0x4069D8: trim(std::string&) (main.cpp:40)
==19480==    by 0x40778B: main (main.cpp:140)
==19480== 
test2.in: 13: # $Id: test2.in,v 1.1 2016-06-28 14:48:38-07 - - $
test3.in: 1: # Comments should be ignored
test3.in: 2: 
test3.in: 3: 
test3.in: 4: also ignore blank lines
also ignore blank lines: key not found
test3.in: 5: this file contains nonexistent keys
this file contains nonexistent keys: key not found
test3.in: 6: all output should be error messages
all output should be error messages: key not found
test3.in: 7: # $Id: test3.in,v 1.1 2016-06-28 14:48:38-07 - - $
==19480== 
==19480== HEAP SUMMARY:
==19480==     in use at exit: 969 bytes in 31 blocks
==19480==   total heap usage: 91,941 allocs, 91,910 frees, 1,725,446 bytes allocated
==19480== 
==19480== LEAK SUMMARY:
==19480==    definitely lost: 0 bytes in 0 blocks
==19480==    indirectly lost: 0 bytes in 0 blocks
==19480==      possibly lost: 0 bytes in 0 blocks
==19480==    still reachable: 969 bytes in 31 blocks
==19480==                       of which reachable via heuristic:
==19480==                         stdstring          : 649 bytes in 21 blocks
==19480==         suppressed: 0 bytes in 0 blocks
==19480== Rerun with --leak-check=full to see details of leaked memory
==19480== 
==19480== For counts of detected and suppressed errors, rerun with: -v
==19480== Use --track-origins=yes to see where uninitialised values come from
==19480== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)
