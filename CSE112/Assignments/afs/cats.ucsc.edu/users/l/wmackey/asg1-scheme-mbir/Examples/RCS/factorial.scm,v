head	1.5;
access;
symbols;
locks;
comment	@# @;


1.5
date	2020.10.13.18.51.11;	author -;	state -;
branches;
next	1.4;

1.4
date	2016.09.06.22.07.38;	author -;	state -;
branches;
next	1.3;

1.3
date	2016.09.06.22.07.00;	author -;	state -;
branches;
next	1.2;

1.2
date	2016.09.06.22.06.27;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.09.28.21.03.38;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@(require racket/trace)

;; non tail-recursive
(define (fac-non-tail n)
   (if (<= n 0) 1
       (* n (fac-non-tail (- n 1)))))

;; tail recursive
(define (fac2 n)
   (define (f n acc)
           (if (<= n 0) acc
               (f (- n 1) (* n acc))))
   (f n 1))

;; traceable tail recursive
(define (fac-tail-helper n acc)
    (if (<= n 0) acc
        (fac-tail-helper (- n 1) (* n acc))))
(define (fac-tail n)
    (fac-tail-helper n 1))

(trace fac-non-tail)
(trace fac2)
(trace fac-tail fac-tail-helper)

;; $Id: factorial.scm,v 1.4 2016-09-06 15:07:38-07 - - $
@


1.4
log
@-
@
text
@d1 2
d4 1
a4 1
(define (fac1 n)
d6 1
a6 1
       (* n (fac1 (- n 1)))))
d15 12
a26 1
;; $Id: factorial.scm,v 1.3 2016-09-06 15:07:00-07 - - $
@


1.3
log
@-
@
text
@d4 1
a4 1
       (* n (fac (- n 1)))))
d13 1
a13 1
;; $Id: factorial.scm,v 1.2 2016-09-06 15:06:27-07 - - $
@


1.2
log
@-
@
text
@d1 1
a1 1
// non tail-recursive
d6 1
a6 1
// tail recursive
d13 1
a13 1
;; $Id: factorial.scm,v 1.1 2015-09-28 14:03:38-07 - - $
@


1.1
log
@-
@
text
@d1 2
a2 1
(define (fac n)
d5 9
a13 1
;; $Id$
@
