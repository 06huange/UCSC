head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2020.10.15.04.13.18;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.10.15.03.57.43;	author -;	state -;
branches;
next	1.1;

1.1
date	2020.10.15.03.49.45;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@(require racket/trace)

;; non tail-recursive
(define (fib-non-tail n)
   (if (<= n 1) n
       (+ (fib-non-tail (- n 1))
          (fib-non-tail (- n 2)))))

;; traceable tail recursive
(define (fib-tail-helper n a b)
    (if (<= n 0) a
        (fib-tail-helper (- n 1) b (+ a b))))
(define (fib-tail n)
    (fib-tail-helper n 0 1))

(trace fib-non-tail)
(trace fib-tail fib-tail-helper)

;; $Id: fibonacci.scm,v 1.2 2020-10-14 20:57:43-07 - - $
@


1.2
log
@-
@
text
@d6 2
a7 2
       (+ (fib-non-tail (- n 1)
          (fib-non-tail (- n 2))))))
d11 1
a11 1
    (if (<= n 1) a
a16 1
(trace fib2)
d19 1
a19 1
;; $Id: fibonacci.scm,v 1.1 2020-10-14 20:49:45-07 - - $
@


1.1
log
@-
@
text
@d5 3
a7 9
   (if (<= n 0) 1
       (* n (fib-non-tail (- n 1)))))

;; tail recursive
(define (fib2 n)
   (define (f n acc)
           (if (<= n 0) acc
               (f (- n 1) (* n acc))))
   (f n 1))
d10 3
a12 3
(define (fib-tail-helper n acc)
    (if (<= n 0) acc
        (fib-tail-helper (- n 1) (* n acc))))
d14 1
a14 1
    (fib-tail-helper n 1))
d20 1
a20 1
;; $Id: factorial.scm,v 1.5 2020-10-13 11:51:11-07 - - $
@
