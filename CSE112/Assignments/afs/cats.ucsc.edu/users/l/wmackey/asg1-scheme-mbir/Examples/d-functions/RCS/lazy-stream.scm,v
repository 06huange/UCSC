head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2021.04.10.02.59.12;	author -;	state -;
branches;
next	1.2;

1.2
date	2021.04.10.02.43.25;	author -;	state -;
branches;
next	1.1;

1.1
date	2021.04.10.01.51.28;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@#!/afs/cats.ucsc.edu/courses/cse112-wm/usr/racket/bin/mzscheme -qr
;; $Id: lazy-stream.scm,v 1.2 2021-04-09 19:43:25-07 - - $

(define-syntax zcons
    (syntax-rules ()
        ((_ ca cd)
         (cons ca (delay cd)))))

(define (zcar stream)
    (car stream))

(define (zcdr stream)
    (force (cdr stream)))

(define (zfrom n)
    (zcons n (zfrom (+ n 1))))

(define naturals (zfrom 1))

(define (ztake n stream)
    (cond ((<= n 0) '())
          ((null? stream) '())
          (else cons (zcar stream)
                     (ztake (- n 1) (zcdr stream)))))

(define (zdrop n stream)
    (cond ((<= n 0) stream)
          ((null? stream) '())
          (else (zdrop (- n 1) (zcdr stream)))))

@


1.2
log
@-
@
text
@d2 1
a2 1
;; $Id: zstream.scm,v 1.1 2021-04-09 18:51:28-07 - - $
d15 2
a16 2
(define (ints-from n)
    (zcons n (ints-from (+ n 1))))
d18 1
a18 1
;;(define naturals (ints-from 1))
d20 10
a29 4
(define (take n stream)
    (if (<= n 0) '()
        (cons (zcar stream)
              (take (- n 1) (zcdr stream)))))
@


1.1
log
@-
@
text
@d2 1
a2 1
;; $Id: lazy-steram.scm,v 1.1 2021-04-09 18:49:12-07 - - $
d4 1
a4 1
(define-syntax lazy-cons
d6 2
a7 2
        ((lazy-cons ca cd)
         (cons car (delay cdr)))))
d9 1
a9 4
(define (lazy-cons a d)
    (cons a (delay b)))

(define (lazy-car stream)
d12 1
a12 1
(define (lazy-cdr stream)
d16 1
a16 1
    (lazy-cons n (ints-from (+ n 1))))
d18 1
a18 1
(define naturals (ints-from 1))
d22 2
a23 2
        (cons (lazy-car stream)
              (take (- n 1) (lazy-cdr stream)))))
@
