head	1.6;
access;
symbols;
locks;
comment	@# @;


1.6
date	2021.01.13.03.34.27;	author -;	state -;
branches;
next	1.5;

1.5
date	2021.01.05.19.38.51;	author -;	state -;
branches;
next	1.4;

1.4
date	2021.01.05.19.38.11;	author -;	state -;
branches;
next	1.3;

1.3
date	2021.01.05.19.37.31;	author -;	state -;
branches;
next	1.2;

1.2
date	2021.01.05.19.35.18;	author -;	state -;
branches;
next	1.1;

1.1
date	2021.01.05.19.35.04;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@#!/afs/cats.ucsc.edu/courses/cse112-wm/usr/racket/bin/mzscheme -qr
;; $Id: simple-eval.scm,v 1.5 2021-01-05 11:38:51-08 - - $

(define (eval expr)
    (if (number? expr) (+ expr 0.0)
        (apply (car expr)
               (map eval (cdr expr)))))

(define (print-eval expr)
    (printf "~s~n= ~s~n~n" expr (eval expr)))

(print-eval 3)

(print-eval `(,+ 4.14 2.71))

(print-eval `(,sqrt -1))

(print-eval `(,+ (,* 2 3) (,* 4 5)))

(print-eval `(,* (,+ 8 3) (,+ (,* 2 9) 6)))

@


1.5
log
@-
@
text
@d2 1
a2 1
;; $Id: simple-eval.scm,v 1.4 2021-01-05 11:38:11-08 - - $
d14 1
a14 1
(print-eval `(,+ 3.14 2.71)
@


1.4
log
@-
@
text
@d2 1
a2 1
;; $Id: simple-eval.scm,v 1.3 2021-01-05 11:37:31-08 - - $
d13 2
@


1.3
log
@-
@
text
@d2 1
a2 1
;; $Id: simple-eval.scm,v 1.2 2021-01-05 11:35:18-08 - - $
d10 1
a10 1
    (printf "~s = ~s~n" expr (eval expr)))
@


1.2
log
@-
@
text
@d2 1
a2 1
;; $Id: simple-eval.scm,v 1.1 2021-01-05 11:35:04-08 - - $
d4 1
a4 1
(define (simple-eval expr)
d7 1
a7 1
               (map simple-eval (cdr expr)))))
d9 2
d12 1
a12 1
(simple-eval 3)
d14 1
a14 1
(simple-eval `(,sqrt -1))
d16 1
a16 1
(simple-eval `(,+ (,* 2 3) (,* 4 5)))
d18 1
a18 1
(simple-eval `(,* (,+ 8 3) (,+ (,* 2 9) 6)))
@


1.1
log
@-
@
text
@d2 1
a2 1
;; $Id$
d10 1
a10 1
(evalexpr 3)
d12 1
a12 1
(evalexpr `(,sqrt -1))
d14 1
a14 1
(evalexpr `(,+ (,* 2 3) (,* 4 5)))
d16 1
a16 1
(evalexpr `(,* (,+ 8 3) (,+ (,* 2 9) 6)))
@
