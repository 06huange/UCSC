head	1.5;
access;
symbols;
locks;
comment	@; @;


1.5
date	2021.04.23.03.37.53;	author -;	state -;
branches;
next	1.4;

1.4
date	2021.04.20.23.53.41;	author -;	state -;
branches;
next	1.3;

1.3
date	2021.01.26.21.24.09;	author -;	state -;
branches;
next	1.2;

1.2
date	2021.01.26.21.23.43;	author -;	state -;
branches;
next	1.1;

1.1
date	2021.01.26.21.02.01;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@#!/afs/cats.ucsc.edu/courses/cse112-wm/usr/ocaml/bin/ocaml
(* $Id: hashexample.ml,v 1.4 2021-04-20 16:53:41-07 - - $ *)

open Printf;;

type variable_table_t = (string, float) Hashtbl.t;;

let variable_table : variable_table_t = Hashtbl.create 16;;
let _ = List.iter (fun (label, value) ->
                  Hashtbl.replace variable_table label value)
                 ["e"  , exp 1.0;
                  "eof", 0.0;
                  "pi" , acos ~-.1.0;
                  "nan", nan];;

let printvalue_raise var =
    try let value = Hashtbl.find variable_table var
        in printf "%s = %.16g\n%!" var value
    with Not_found -> printf "%s: Not_found\n%!" var;;

let printvalue_opt var =
    let result = Hashtbl.find_opt variable_table var
    in (match result with
       | None -> printf "%s = None\n%!" var
       | Some value -> printf "%s = Some %.16g\n%!" var value);;

let vars = ["e"; "none"; "pi"; "foo"; "eof"; "nan"];;

printf  "\nprintvalue_raise...\n%!";;
List.iter printvalue_raise vars;;

printf  "\nprintvalue_opt...\n%!";;
List.iter printvalue_opt vars;;

@


1.4
log
@-
@
text
@d2 1
a2 1
(* $Id: hashexample.ml,v 1.3 2021-01-26 13:24:09-08 - - $ *)
d10 1
a10 1
                  Hashtbl.add variable_table label value)
@


1.3
log
@-
@
text
@d1 2
a2 2
#!/bin/env ocaml
(* $Id: hashexample.ml,v 1.2 2021-01-26 13:23:43-08 - - $ *)
@


1.2
log
@-
@
text
@d2 1
a2 1
(* $Id: hashexample.ml,v 1.1 2021-01-26 13:02:01-08 - - $ *)
d29 1
a29 1
printf  "\nprintvalue_raise...\n%@@";;
d32 1
a32 1
printf  "\nprintvalue_opt...\n%@@";;
@


1.1
log
@-
@
text
@d2 1
a2 1
(* $Id: hashexample.ml,v 1.1 2021-01-26 00:11:28-08 - - $ *)
d16 1
a16 1
let printvalue var =
d18 2
a19 2
        in printf "%s = %.15g\n%!" var value
    with Not_found -> printf "%s: not found\n%!" var;;
d21 13
a33 1
List.iter printvalue ["e"; "none"; "pi"; "foo"];;
@
