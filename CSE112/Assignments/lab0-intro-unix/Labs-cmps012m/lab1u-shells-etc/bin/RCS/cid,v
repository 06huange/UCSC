head	1.6;
access;
symbols;
locks;
comment	@# @;


1.6
date	2020.08.20.23.58.26;	author -;	state -;
branches;
next	1.5;

1.5
date	2020.08.20.20.49.34;	author -;	state -;
branches;
next	1.4;

1.4
date	2020.08.15.22.30.52;	author -;	state -;
branches;
next	1.3;

1.3
date	2020.08.15.21.14.18;	author -;	state -;
branches;
next	1.2;

1.2
date	2019.12.17.22.37.17;	author -;	state -;
branches;
next	1.1;

1.1
date	2019.10.31.20.32.24;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@#!/usr/bin/perl
use strict;
use warnings;
my $RCSID = '$Id: cid,v 1.5 2020-08-20 13:49:34-07 - - $';
$0 =~ s|/*$||; $0 =~ s|.*/||;

my $USAGE = <<__END_USAGE__;
#
# NAME
#    $0 - check-in file to RCS subdirectory archive unlocked
#
# SYNOPSIS
#    $0 [options] filename...
#
# DESCRIPTION
#    The options given are ci(1) options, ignored by $0 except to
#    consider them not files if they begin with a dash.  The time
#    zone options is set to local time and locking is non-strict.
#
# OPTIONS
#    +  Causes $0 to run silently without excess chatter.
#       Must be the first option and in a word by itself.
#    -i itemize files checked in even if silent
#    -s Silent mode (same as +)
#
# $RCSID
#
__END_USAGE__

use strict;
use warnings;
use Getopt::Std;
use POSIX qw (strftime);
$0 =~ s|.*/||;

$USAGE =~ s/^#[ ]?//mg;
print $USAGE and exit unless @@ARGV;
$ARGV[0] = "-is" if $ARGV[0] eq "+";

my %opts;
getopts "is", \%opts;
my $itemize = $opts{'i'};
my $silent = $opts{'s'};
print $USAGE and exit unless @@ARGV;

sub echo_run(@@) {
   my (@@command) = @@_;
   print "$0: % @@command\n" unless $silent;
   my $output = qx(@@command 2>&1);
   $output =~ s/done\n//g;
   $output =~ s{file\s+is\s+unchanged;\s+
                reverting\s+to\s+previous\s+revision\s+\d+\.?\d+\s*
               }{}x if $silent;
   $output =~ s{RCS/.*,v\s+<--\s+.*\s*}{} if $silent;
   print $output unless $silent;
};

my (%mode, @@files, %rcsdirs, @@rcsdirs, @@rcsfiles);
for my $file (@@ARGV) {
   next unless $mode{$file} = (stat $file)[2];
   push @@files, $file;
   my $rcsdir = $file;
   $rcsdir =~ s{[^/]*$}{RCS};
   next if $rcsdirs{$rcsdir} or -d $rcsdir;
   $rcsdirs{$rcsdir} = push @@rcsdirs, $rcsdir;
};

map {echo_run "mkdir $_"} @@rcsdirs;

$ENV{RCSINIT} = '-zLT -s- -t-';
$ENV{LOGNAME} = '-';

echo_run "ci -m- -u @@ARGV" if @@ARGV;

if (@@files) {
   @@rcsfiles = map {my $x = $_; $x =~ s|.*|RCS/$&,v|; $x} @@files;
   print "$0: [@@files]\n" unless $silent;
   echo_run "rcs -q -U @@files";
   map{ chmod $mode{$_} & 07777, $_ or warn "$0: $_: $!" } @@files;
   echo_run "ls -goaFd @@files @@rcsfiles | cut -c1-80" unless $silent;
   my @@idents = grep {m/\ .*?,v/} qx(ident -q @@files);
   map {s/^\s*//} @@idents;
   if ($itemize || ! $silent) {
      print @@idents;
   }
};

@


1.5
log
@-
@
text
@d4 1
a4 1
my $RCSID = '$Id: cid,v 1.4 2020-08-15 15:30:52-07 - - $';
d49 1
a49 1
   my $output = `@@command 2>&1`;
d81 1
a81 1
   my @@idents = grep {m/\$Id: .*?,v/} `ident -q @@files`;
@


1.4
log
@-
@
text
@d4 1
a4 1
my $RCSID = '$Id: cid,v 1.3 2020-08-15 14:14:18-07 - - $';
d23 1
a23 1
#    -i prints out squeezed ident option, even if silent.
d42 1
a43 3
my $identsqueeze =
   q(perl -pe 'BEGIN{undef $/}s/:\n+\s+/: /gs;s/\n+/\n/gs')
   if $opts{'i'};
d81 4
a84 4
   if ($identsqueeze) {
      system "ident -q @@files | $identsqueeze";
   }else {
      echo_run "ident -q @@files" unless $silent;
@


1.3
log
@-
@
text
@d4 1
a4 1
my $RCSID = '$Id: cid,v 1.2 2019-12-17 14:37:17-08 - - $';
d38 1
a38 5

if (@@ARGV && $ARGV[0] eq "+") {
   print STDERR "$0: obsolete option '+': @@ARGV\n";
   exit 1;
}
d46 1
@


1.2
log
@-
@
text
@d4 1
a4 1
my $RCSID = '$Id: cid,v 1.1 2019-10-31 13:32:24-07 - - $';
d34 1
d39 4
a42 1
my $silent = @@ARGV && ($ARGV[0] eq "+" ? shift @@ARGV : 0);
d46 1
a46 1
$silent = $opts{'s'} unless $silent;
@


1.1
log
@-
@
text
@d4 1
a4 1
my $RCSID = '$Id: cid,v 1.3 2018-08-09 16:56:40-07 - - $';
d23 2
d30 5
d38 1
a38 1
use POSIX qw (strftime);
d40 6
a45 1
my $silent = @@ARGV && ($ARGV[0] eq "+" ? shift @@ARGV : 0);
d82 5
a86 1
   echo_run "ident -q @@files" unless $silent;
@
