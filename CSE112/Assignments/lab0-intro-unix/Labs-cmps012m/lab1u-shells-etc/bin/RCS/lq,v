head	1.11;
access;
symbols;
locks;
comment	@# @;


1.11
date	2020.08.21.04.03.04;	author -;	state -;
branches;
next	1.10;

1.10
date	2020.08.21.03.23.31;	author -;	state -;
branches;
next	1.9;

1.9
date	2020.08.21.00.06.03;	author -;	state -;
branches;
next	1.8;

1.8
date	2020.08.17.04.41.05;	author -;	state -;
branches;
next	1.7;

1.7
date	2020.07.30.07.29.53;	author -;	state -;
branches;
next	1.6;

1.6
date	2020.07.30.07.16.24;	author -;	state -;
branches;
next	1.5;

1.5
date	2020.07.20.09.31.28;	author -;	state -;
branches;
next	1.4;

1.4
date	2020.07.20.09.30.30;	author -;	state -;
branches;
next	1.3;

1.3
date	2020.07.20.06.36.01;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.07.20.06.34.12;	author -;	state -;
branches;
next	1.1;

1.1
date	2020.07.20.06.32.54;	author -;	state -;
branches;
next	;


desc
@@


1.11
log
@-
@
text
@#!/usr/bin/perl
# $Id: lq,v 1.10 2020-08-20 20:23:31-07 - - $
#
# NAME
#    lq - list quotas of /afs/ volumes
#
# SYNOPSIS
#    lq [-kmg] [volume...]
#
# DESCRIPTION
#    Uses the command fs lq to determine the quota information
#    about a list of volumes.  If no volumes are specified,
#    uses the volume containing ".".
#
# OPTIONS
#    -k  prints information in KiB
#    -m  prints information in MiB (default)
#    -g  prints information in GiB
# 

use strict;
use warnings;
use Getopt::Std;

my %opts;
getopts "kmg", \%opts;
$opts{'m'} = 1 unless $opts{'k'} || $opts{'g'};
my ($fmt, $unit, $div);
$fmt = "%8.0f", $unit = "KiB", $div = (1<< 0) if $opts{'k'};
$fmt = "%8.1f", $unit = "MiB", $div = (1<<10) if $opts{'m'};
$fmt = "%8.3f", $unit = "GiB", $div = (1<<20) if $opts{'g'};

my @@quotas = qx(fs lq @@ARGV);
my $titles = shift @@quotas;
$titles =~ s/ Name/_Name/;
my ($volume, $quota, $used) = split ' ', $titles;
printf "%-16s %14s %14s %7s %14s\n",
       $volume, $quota, $used, "%Used", "Available";;

sub comma($) {
   my ($number) = @@_;
   my $string = sprintf $fmt, $number;
   $string =~ s/(\d)(\d{3})(\.|$)/$1,$2$3/;
   1 while $string =~ s/(\d)(\d{3}),/$1,$2,/;
   return "$string $unit";
}

sub print_info($$$) {
   my ($volume, $quota, $used) = @@_;
   printf "%-16s %14s %14s %6.1f%% %14s\n",
          $volume,
          comma ($quota / $div),
          comma ($used / $div),
          $used / $quota * 100,
          comma (($quota - $used) / $div);
}

my $total_quota = 0;
my $total_used = 0;
for my $quota (@@quotas) {
   my ($volume, $quota, $used) = split ' ', $quota;
   print_info $volume, $quota, $used;
   $total_quota += $quota;
   $total_used += $used;
}

if (@@quotas > 1) {
   print_info "TOTAL", $total_quota, $total_used;
}

@


1.10
log
@-
@
text
@d2 1
a2 1
# $Id: lq,v 1.9 2020-08-20 17:06:03-07 - - $
d28 4
a31 4
my ($fmt, $div);
$fmt = "%8.0f KiB", $div = (1<< 0) if $opts{'k'};
$fmt = "%8.1f MiB", $div = (1<<10) if $opts{'m'};
$fmt = "%8.3f GiB", $div = (1<<20) if $opts{'g'};
d37 1
a37 1
printf "%-16s %12s %12s %7s %12s\n",
d40 8
d50 6
a55 3
   printf "%-16s $fmt $fmt %6.1f%% $fmt\n",
          $volume, $quota / $div, $used / $div,
          $used / $quota * 100, ($quota - $used) / $div;;
@


1.9
log
@-
@
text
@d2 1
a2 1
# $Id: lq,v 1.8 2020-08-16 21:41:05-07 - - $
d37 2
a38 1
printf "%-16s %12s %12s %7s\n", $volume, $quota, $used, "%Used";
d42 1
a42 1
   printf "%-16s $fmt $fmt %6.1f%%\n",
d44 1
a44 1
          $used / $quota * 100;
@


1.8
log
@-
@
text
@d2 1
a2 1
# $Id: lq,v 1.7 2020-07-30 00:29:53-07 - - $
d33 1
a33 1
my @@quotas = `fs lq @@ARGV`;
@


1.7
log
@-
@
text
@d2 1
a2 1
# $Id: lq,v 1.6 2020-07-30 00:16:24-07 - - $
d37 1
a37 1
printf "%-16s %12s %12s %6s\n", $volume, $quota, $used, "%Used";
@


1.6
log
@-
@
text
@d2 1
a2 1
# $Id: lq,v 1.5 2020-07-20 02:31:28-07 - - $
d41 1
a41 1
   printf "%-16s $fmt $fmt %5.1f%%\n",
@


1.5
log
@-
@
text
@d2 18
a19 1
# $Id: lq,v 1.4 2020-07-20 02:30:30-07 - - $
@


1.4
log
@-
@
text
@d2 1
a2 1
# $Id: lq,v 1.3 2020-07-19 23:36:01-07 - - $
d12 3
a14 3
$fmt = "%8.0fKi", $div = (1<< 0) if $opts{'k'};
$fmt = "%8.1fMi", $div = (1<<10) if $opts{'m'};
$fmt = "%8.3fGi", $div = (1<<20) if $opts{'g'};
d20 1
a20 1
printf "%-16s %10s %10s %6s\n", $volume, $quota, $used, "%Used";
@


1.3
log
@-
@
text
@d2 1
a2 1
# $Id: lq,v 1.2 2020-07-19 23:34:12-07 - - $
d12 3
a14 3
$fmt = "%8.0fK", $div = (1<< 0) if $opts{'k'};
$fmt = "%8.1fM", $div = (1<<10) if $opts{'m'};
$fmt = "%8.3fG", $div = (1<<20) if $opts{'g'};
d20 1
a20 1
printf "%-16s %9s %9s %6s\n", $volume, $quota, $used, "%Used";
@


1.2
log
@-
@
text
@d2 1
a2 1
# $Id: lq,v 1.1 2020-07-19 23:32:54-07 - - $
d14 1
a14 1
$fmt = "%8.4fG", $div = (1<<20) if $opts{'g'};
@


1.1
log
@-
@
text
@d2 1
a2 1
# $Id: lq,v 1.2 2016-10-25 14:33:14-07 - - $
d24 1
a24 1
   printf "%-16s $fmt $fmt %5.0f%%\n",
@
