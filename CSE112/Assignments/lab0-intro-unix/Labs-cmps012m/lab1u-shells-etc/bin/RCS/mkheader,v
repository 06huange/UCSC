head	1.202;
access;
symbols;
locks;
comment	@# @;


1.202
date	2021.03.08.08.06.39;	author -;	state -;
branches;
next	1.201;

1.201
date	2020.12.01.23.03.46;	author -;	state -;
branches;
next	1.200;

1.200
date	2020.12.01.23.03.23;	author -;	state -;
branches;
next	1.199;

1.199
date	2020.11.25.00.19.17;	author -;	state -;
branches;
next	1.198;

1.198
date	2020.11.24.22.12.06;	author -;	state -;
branches;
next	1.197;

1.197
date	2020.11.24.21.34.40;	author -;	state -;
branches;
next	1.196;

1.196
date	2020.11.24.21.32.41;	author -;	state -;
branches;
next	1.195;

1.195
date	2020.11.24.21.31.31;	author -;	state -;
branches;
next	1.194;

1.194
date	2020.11.22.02.34.48;	author -;	state -;
branches;
next	1.193;

1.193
date	2020.11.18.23.01.44;	author -;	state -;
branches;
next	1.192;

1.192
date	2020.11.17.23.29.01;	author -;	state -;
branches;
next	1.191;

1.191
date	2020.11.17.23.27.27;	author -;	state -;
branches;
next	1.190;

1.190
date	2020.11.12.00.05.00;	author -;	state -;
branches;
next	1.189;

1.189
date	2020.11.12.00.02.10;	author -;	state -;
branches;
next	1.188;

1.188
date	2020.11.12.00.00.15;	author -;	state -;
branches;
next	1.187;

1.187
date	2020.11.11.23.57.00;	author -;	state -;
branches;
next	1.186;

1.186
date	2020.11.11.00.08.48;	author -;	state -;
branches;
next	1.185;

1.185
date	2020.11.11.00.06.17;	author -;	state -;
branches;
next	1.184;

1.184
date	2020.11.10.23.12.47;	author -;	state -;
branches;
next	1.183;

1.183
date	2020.11.10.23.12.01;	author -;	state -;
branches;
next	1.182;

1.182
date	2020.11.10.23.06.12;	author -;	state -;
branches;
next	1.181;

1.181
date	2020.11.10.23.05.39;	author -;	state -;
branches;
next	1.180;

1.180
date	2020.09.07.05.20.31;	author -;	state -;
branches;
next	1.179;

1.179
date	2020.09.01.01.24.43;	author -;	state -;
branches;
next	1.178;

1.178
date	2020.09.01.01.24.18;	author -;	state -;
branches;
next	1.177;

1.177
date	2020.09.01.01.23.49;	author -;	state -;
branches;
next	1.176;

1.176
date	2020.09.01.01.22.57;	author -;	state -;
branches;
next	1.175;

1.175
date	2020.08.28.21.36.28;	author -;	state -;
branches;
next	1.174;

1.174
date	2020.08.28.21.26.28;	author -;	state -;
branches;
next	1.173;

1.173
date	2020.08.22.21.29.35;	author -;	state -;
branches;
next	1.172;

1.172
date	2020.08.22.20.35.17;	author -;	state -;
branches;
next	1.171;

1.171
date	2020.08.22.19.59.44;	author -;	state -;
branches;
next	1.170;

1.170
date	2020.08.22.19.52.07;	author -;	state -;
branches;
next	1.169;

1.169
date	2020.08.21.00.06.24;	author -;	state -;
branches;
next	1.168;

1.168
date	2020.08.20.20.39.15;	author -;	state -;
branches;
next	1.167;

1.167
date	2020.08.20.20.38.22;	author wmackey;	state Exp;
branches;
next	1.166;

1.166
date	2020.08.18.20.40.31;	author -;	state -;
branches;
next	1.165;

1.165
date	2020.08.18.08.07.13;	author -;	state -;
branches;
next	1.164;

1.164
date	2020.08.17.06.16.41;	author -;	state -;
branches;
next	1.163;

1.163
date	2020.08.17.04.53.53;	author -;	state -;
branches;
next	1.162;

1.162
date	2020.08.13.20.23.55;	author -;	state -;
branches;
next	1.161;

1.161
date	2020.08.12.08.15.26;	author -;	state -;
branches;
next	1.160;

1.160
date	2020.08.12.08.12.13;	author -;	state -;
branches;
next	1.159;

1.159
date	2020.08.12.08.07.53;	author -;	state -;
branches;
next	1.158;

1.158
date	2020.08.12.07.16.31;	author -;	state -;
branches;
next	1.157;

1.157
date	2020.08.11.22.43.27;	author -;	state -;
branches;
next	1.156;

1.156
date	2020.08.11.22.41.27;	author -;	state -;
branches;
next	1.155;

1.155
date	2020.08.11.22.40.14;	author -;	state -;
branches;
next	1.154;

1.154
date	2020.08.07.21.17.03;	author -;	state -;
branches;
next	1.153;

1.153
date	2020.08.07.21.15.45;	author -;	state -;
branches;
next	1.152;

1.152
date	2020.08.07.18.40.54;	author -;	state -;
branches;
next	1.151;

1.151
date	2020.08.07.18.39.10;	author -;	state -;
branches;
next	1.150;

1.150
date	2020.08.07.07.31.31;	author -;	state -;
branches;
next	1.149;

1.149
date	2020.08.07.05.30.26;	author -;	state -;
branches;
next	1.148;

1.148
date	2020.08.07.05.27.53;	author -;	state -;
branches;
next	1.147;

1.147
date	2020.08.07.04.04.03;	author -;	state -;
branches;
next	1.146;

1.146
date	2020.08.07.03.57.39;	author -;	state -;
branches;
next	1.145;

1.145
date	2020.08.06.21.35.30;	author -;	state -;
branches;
next	1.144;

1.144
date	2020.08.06.21.33.12;	author -;	state -;
branches;
next	1.143;

1.143
date	2020.08.06.21.08.20;	author -;	state -;
branches;
next	1.142;

1.142
date	2020.08.06.20.54.34;	author -;	state -;
branches;
next	1.141;

1.141
date	2020.08.06.07.19.29;	author -;	state -;
branches;
next	1.140;

1.140
date	2020.08.06.06.44.20;	author -;	state -;
branches;
next	1.139;

1.139
date	2020.08.04.21.32.54;	author -;	state -;
branches;
next	1.138;

1.138
date	2020.08.04.20.57.59;	author -;	state -;
branches;
next	1.137;

1.137
date	2020.08.04.20.57.31;	author -;	state -;
branches;
next	1.136;

1.136
date	2020.08.04.20.48.04;	author -;	state -;
branches;
next	1.135;

1.135
date	2020.08.04.19.51.21;	author -;	state -;
branches;
next	1.134;

1.134
date	2020.08.02.09.33.56;	author -;	state -;
branches;
next	1.133;

1.133
date	2020.08.02.09.30.35;	author -;	state -;
branches;
next	1.132;

1.132
date	2020.08.02.09.29.47;	author -;	state -;
branches;
next	1.131;

1.131
date	2020.08.01.21.04.14;	author -;	state -;
branches;
next	1.130;

1.130
date	2020.08.01.05.46.43;	author -;	state -;
branches;
next	1.129;

1.129
date	2020.07.31.07.39.35;	author -;	state -;
branches;
next	1.128;

1.128
date	2020.07.31.07.36.28;	author -;	state -;
branches;
next	1.127;

1.127
date	2020.07.31.02.55.13;	author -;	state -;
branches;
next	1.126;

1.126
date	2020.07.30.23.35.13;	author -;	state -;
branches;
next	1.125;

1.125
date	2020.07.30.23.34.31;	author -;	state -;
branches;
next	1.124;

1.124
date	2020.07.30.23.33.49;	author -;	state -;
branches;
next	1.123;

1.123
date	2020.07.30.23.24.11;	author -;	state -;
branches;
next	1.122;

1.122
date	2020.07.30.23.19.15;	author -;	state -;
branches;
next	1.121;

1.121
date	2020.07.30.23.11.19;	author -;	state -;
branches;
next	1.120;

1.120
date	2020.07.30.22.41.37;	author -;	state -;
branches;
next	1.119;

1.119
date	2020.07.30.22.07.35;	author -;	state -;
branches;
next	1.118;

1.118
date	2020.07.30.21.49.18;	author -;	state -;
branches;
next	1.117;

1.117
date	2020.07.30.21.48.49;	author -;	state -;
branches;
next	1.116;

1.116
date	2020.07.30.19.17.09;	author -;	state -;
branches;
next	1.115;

1.115
date	2020.07.30.19.16.04;	author -;	state -;
branches;
next	1.114;

1.114
date	2020.07.30.18.52.40;	author -;	state -;
branches;
next	1.113;

1.113
date	2020.07.30.18.45.42;	author -;	state -;
branches;
next	1.112;

1.112
date	2020.07.26.07.13.34;	author -;	state -;
branches;
next	1.111;

1.111
date	2020.07.25.05.25.20;	author -;	state -;
branches;
next	1.110;

1.110
date	2020.07.24.07.28.14;	author -;	state -;
branches;
next	1.109;

1.109
date	2020.07.24.01.16.59;	author -;	state -;
branches;
next	1.108;

1.108
date	2020.07.23.21.50.05;	author -;	state -;
branches;
next	1.107;

1.107
date	2020.07.23.21.48.07;	author -;	state -;
branches;
next	1.106;

1.106
date	2020.07.23.21.45.24;	author -;	state -;
branches;
next	1.105;

1.105
date	2020.07.23.21.44.41;	author -;	state -;
branches;
next	1.104;

1.104
date	2020.07.23.21.43.04;	author -;	state -;
branches;
next	1.103;

1.103
date	2020.07.23.21.24.59;	author -;	state -;
branches;
next	1.102;

1.102
date	2020.07.23.21.21.59;	author -;	state -;
branches;
next	1.101;

1.101
date	2020.07.23.20.58.46;	author -;	state -;
branches;
next	1.100;

1.100
date	2020.07.23.20.56.48;	author -;	state -;
branches;
next	1.99;

1.99
date	2020.07.23.20.40.23;	author -;	state -;
branches;
next	1.98;

1.98
date	2020.07.23.20.38.18;	author -;	state -;
branches;
next	1.97;

1.97
date	2020.07.23.20.33.36;	author -;	state -;
branches;
next	1.96;

1.96
date	2020.07.23.20.17.00;	author -;	state -;
branches;
next	1.95;

1.95
date	2020.07.23.20.13.06;	author -;	state -;
branches;
next	1.94;

1.94
date	2020.07.23.20.11.36;	author -;	state -;
branches;
next	1.93;

1.93
date	2020.07.23.20.07.46;	author -;	state -;
branches;
next	1.92;

1.92
date	2020.07.22.04.42.13;	author -;	state -;
branches;
next	1.91;

1.91
date	2020.07.22.04.07.24;	author -;	state -;
branches;
next	1.90;

1.90
date	2020.07.22.01.10.53;	author -;	state -;
branches;
next	1.89;

1.89
date	2020.07.22.01.10.25;	author -;	state -;
branches;
next	1.88;

1.88
date	2020.07.22.01.09.54;	author wmackey;	state Exp;
branches;
next	1.87;

1.87
date	2020.07.22.00.54.02;	author -;	state -;
branches;
next	1.86;

1.86
date	2020.07.21.07.12.51;	author -;	state -;
branches;
next	1.85;

1.85
date	2020.07.21.05.32.09;	author -;	state -;
branches;
next	1.84;

1.84
date	2020.07.21.05.30.59;	author -;	state -;
branches;
next	1.83;

1.83
date	2020.07.21.05.22.37;	author -;	state -;
branches;
next	1.82;

1.82
date	2020.07.21.00.15.08;	author -;	state -;
branches;
next	1.81;

1.81
date	2020.07.21.00.11.40;	author -;	state -;
branches;
next	1.80;

1.80
date	2020.07.21.00.07.31;	author -;	state -;
branches;
next	1.79;

1.79
date	2020.07.21.00.02.56;	author -;	state -;
branches;
next	1.78;

1.78
date	2020.07.21.00.02.17;	author -;	state -;
branches;
next	1.77;

1.77
date	2020.07.21.00.01.26;	author -;	state -;
branches;
next	1.76;

1.76
date	2020.07.20.23.54.49;	author -;	state -;
branches;
next	1.75;

1.75
date	2020.07.20.23.42.31;	author -;	state -;
branches;
next	1.74;

1.74
date	2020.07.20.23.37.42;	author -;	state -;
branches;
next	1.73;

1.73
date	2020.07.20.23.16.29;	author -;	state -;
branches;
next	1.72;

1.72
date	2020.07.20.23.01.07;	author -;	state -;
branches;
next	1.71;

1.71
date	2020.07.20.19.17.25;	author -;	state -;
branches;
next	1.70;

1.70
date	2020.07.20.19.05.48;	author -;	state -;
branches;
next	1.69;

1.69
date	2020.07.20.08.39.35;	author -;	state -;
branches;
next	1.68;

1.68
date	2020.07.20.08.15.01;	author -;	state -;
branches;
next	1.67;

1.67
date	2020.07.20.06.05.24;	author -;	state -;
branches;
next	1.66;

1.66
date	2020.07.20.02.55.17;	author -;	state -;
branches;
next	1.65;

1.65
date	2020.07.20.01.28.02;	author -;	state -;
branches;
next	1.64;

1.64
date	2020.07.20.01.25.32;	author -;	state -;
branches;
next	1.63;

1.63
date	2020.07.20.01.08.12;	author -;	state -;
branches;
next	1.62;

1.62
date	2020.07.20.01.06.31;	author -;	state -;
branches;
next	1.61;

1.61
date	2020.07.20.00.22.57;	author -;	state -;
branches;
next	1.60;

1.60
date	2020.07.20.00.20.07;	author -;	state -;
branches;
next	1.59;

1.59
date	2020.07.20.00.09.49;	author -;	state -;
branches;
next	1.58;

1.58
date	2020.07.20.00.01.10;	author -;	state -;
branches;
next	1.57;

1.57
date	2020.07.19.23.58.31;	author -;	state -;
branches;
next	1.56;

1.56
date	2020.07.19.23.23.50;	author -;	state -;
branches;
next	1.55;

1.55
date	2020.07.19.07.29.26;	author -;	state -;
branches;
next	1.54;

1.54
date	2020.07.19.07.28.28;	author -;	state -;
branches;
next	1.53;

1.53
date	2020.07.19.07.27.30;	author -;	state -;
branches;
next	1.52;

1.52
date	2020.07.19.07.26.45;	author -;	state -;
branches;
next	1.51;

1.51
date	2020.07.17.03.59.03;	author -;	state -;
branches;
next	1.50;

1.50
date	2020.07.17.03.02.15;	author -;	state -;
branches;
next	1.49;

1.49
date	2020.07.16.00.45.09;	author -;	state -;
branches;
next	1.48;

1.48
date	2020.07.16.00.43.32;	author -;	state -;
branches;
next	1.47;

1.47
date	2020.07.15.23.58.14;	author -;	state -;
branches;
next	1.46;

1.46
date	2020.07.15.23.54.30;	author -;	state -;
branches;
next	1.45;

1.45
date	2020.07.13.22.57.15;	author -;	state -;
branches;
next	1.44;

1.44
date	2020.07.13.21.19.51;	author -;	state -;
branches;
next	1.43;

1.43
date	2020.07.13.05.54.42;	author -;	state -;
branches;
next	1.42;

1.42
date	2020.07.13.05.53.29;	author -;	state -;
branches;
next	1.41;

1.41
date	2020.07.12.22.26.20;	author -;	state -;
branches;
next	1.40;

1.40
date	2020.07.11.23.41.51;	author -;	state -;
branches;
next	1.39;

1.39
date	2020.07.11.23.35.43;	author -;	state -;
branches;
next	1.38;

1.38
date	2020.07.11.23.08.40;	author -;	state -;
branches;
next	1.37;

1.37
date	2020.07.11.05.32.36;	author -;	state -;
branches;
next	1.36;

1.36
date	2020.07.11.05.30.18;	author -;	state -;
branches;
next	1.35;

1.35
date	2020.07.10.23.21.38;	author -;	state -;
branches;
next	1.34;

1.34
date	2020.07.10.23.09.32;	author -;	state -;
branches;
next	1.33;

1.33
date	2020.07.10.04.28.02;	author -;	state -;
branches;
next	1.32;

1.32
date	2020.07.09.00.17.40;	author -;	state -;
branches;
next	1.31;

1.31
date	2020.07.08.23.34.27;	author -;	state -;
branches;
next	1.30;

1.30
date	2020.07.08.22.18.56;	author -;	state -;
branches;
next	1.29;

1.29
date	2020.07.08.18.39.45;	author -;	state -;
branches;
next	1.28;

1.28
date	2020.07.08.18.37.50;	author -;	state -;
branches;
next	1.27;

1.27
date	2020.07.08.17.49.12;	author -;	state -;
branches;
next	1.26;

1.26
date	2020.07.08.17.33.36;	author -;	state -;
branches;
next	1.25;

1.25
date	2020.07.05.01.28.22;	author -;	state -;
branches;
next	1.24;

1.24
date	2020.07.03.05.35.39;	author -;	state -;
branches;
next	1.23;

1.23
date	2020.06.30.23.48.09;	author -;	state -;
branches;
next	1.22;

1.22
date	2020.06.29.05.49.06;	author -;	state -;
branches;
next	1.21;

1.21
date	2020.06.29.03.28.19;	author -;	state -;
branches;
next	1.20;

1.20
date	2020.06.29.02.04.29;	author -;	state -;
branches;
next	1.19;

1.19
date	2020.06.29.01.32.38;	author -;	state -;
branches;
next	1.18;

1.18
date	2020.06.28.23.20.53;	author -;	state -;
branches;
next	1.17;

1.17
date	2020.06.28.22.23.45;	author -;	state -;
branches;
next	1.16;

1.16
date	2020.06.28.22.14.20;	author -;	state -;
branches;
next	1.15;

1.15
date	2020.06.28.21.55.00;	author -;	state -;
branches;
next	1.14;

1.14
date	2020.06.28.21.48.09;	author -;	state -;
branches;
next	1.13;

1.13
date	2020.06.28.00.06.35;	author -;	state -;
branches;
next	1.12;

1.12
date	2020.06.28.00.05.44;	author -;	state -;
branches;
next	1.11;

1.11
date	2020.06.26.02.46.59;	author -;	state -;
branches;
next	1.10;

1.10
date	2020.06.26.02.46.11;	author -;	state -;
branches;
next	1.9;

1.9
date	2020.06.26.02.41.59;	author -;	state -;
branches;
next	1.8;

1.8
date	2020.06.25.16.47.39;	author -;	state -;
branches;
next	1.7;

1.7
date	2020.06.25.07.43.23;	author -;	state -;
branches;
next	1.6;

1.6
date	2020.06.24.22.53.48;	author -;	state -;
branches;
next	1.5;

1.5
date	2020.06.24.22.41.01;	author -;	state -;
branches;
next	1.4;

1.4
date	2020.06.24.22.36.35;	author -;	state -;
branches;
next	1.3;

1.3
date	2020.06.14.22.43.24;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.06.12.03.01.28;	author -;	state -;
branches;
next	1.1;

1.1
date	2019.10.31.20.32.24;	author -;	state -;
branches;
next	;


desc
@@


1.202
log
@-
@
text
@#!/usr/bin/perl
# $Id: mkheader,v 1.201 2020-12-01 15:03:46-08 - - $
#
# NAME
#    mkheader - make header for root of course directory
#
# SYNOPSIS
#    mkheader
#
# DESCRIPTION
#    Reads in the file README.txt and tries to detect all due dates
#    with leading text of the form Ddd Mmm Nn, sorts them into order
#    by date, assuming the current year and makes a header file
#    HEADER.html to appear ahead of the default directory listing.
#    Output in the current directory.
#

use lib "/afs/cats.ucsc.edu/courses/cse110a-wm/bin/perl5lib";

use strict;
use warnings;

use Getopt::Std;
use HTTP::Date qw (str2time);
use List::Util qw (max);
use POSIX qw (strftime);
use HTML_Colors;

my $status = 0;
$SIG{'__WARN__'} = sub {print STDERR @@_; $status = 1; };
$SIG{'__DIE__'} = sub {warn @@_; exit 1; };

my $FLAG_SHOW_MONTHS = 1;
my $FLAG_MIN_ROWS = 0;
my $FLAG_DEBUG = 0;

my $daylen = 24 * 60 * 60;
my %months = qw (Jan 0 Feb 1 Mar 2 Apr 3 May 4 Jun 5
                 Jul 6 Aug 7 Sep 8 Oct 9 Nov 10 Dec 11);
my $monthpat = join "|", keys %months;
my $daypat = join "|", qw (Sun Mon Tue Wed Thu Fri Sat);
my $datepat = qr {(\.\s+($daypat)\s+($monthpat)\s+(\d+)\.)(.*)};
my $maybedate = qr {(\.\s+(\w{3})\s+(\w{3})\s+(\d+)\.)(.*)};
my $timenow = $^T;
my @@localtime_now = localtime $timenow;
my $year_now = strftime "%Y", @@localtime_now;
my $sec_180days = 180 * 24 * 3600;

sub yearweek(@@) {
   my @@time = @@_;
   my $year = strftime "%Y", @@time;
   my $week = strftime "%U", @@time;
   my $dayofweek = strftime "%w", @@time;
   my $yearweek = "$year/$week";
   if ($week eq "00" and $year > $year_now and $dayofweek > 0) {
      my @@previous = gmtime str2time "Dec 31 $year_now";
      $yearweek = strftime "%Y/%U", @@previous;
   }
   return $yearweek;
}

$0 =~ s|.*/||;
@@ARGV == 0 or die "Usage: $0\n";

my $PWD = $ENV{PWD} || qx(pwd);
chomp $PWD;
my $URL = qx(pwd2url);
chomp $URL;
my $TITLE = $PWD;
$TITLE =~ s|/afs/cats.ucsc.edu/courses/|~|;
print "$0: $TITLE\n";

my %COLOR = HTML_Colors;

# my %COLOR = (
# 
#    BDR_DATA   => "#00FFFF", # cyan
#    BDR_DUE    => "#FFFF00", # yellow
#    BDR_EMPTY  => "#00FF00", # green
#    BDR_EXAM   => "#FF0000", # red
#    BG_DATA    => "#007F7F", # dark cyan
#    BG_DUE     => "#7F7F00", # dark yellow
#    BG_EMPTY   => "#000000", # black
#    BG_EXAM    => "#7F0000", # dark red
#    FG_HOVER   => "#FF0000", # red
#    FG_LINK    => "#FFFF00", # yellow
#    FG_PLAIN   => "#00FF00", # green
#    FG_VISITED => "#00FFFF", # cyan
# 
# );

sub magstep($) {
   my ($step) = @@_;
   return 1.2 ** $step;
}

my $BODY_font_size_em = magstep 0;
my $DIV_CLOCK_font_size_em = magstep 2;
my $DIV_CLOCK_margin_right_ch = 1;
my $DIV_CLOCK_padding_top_ex = 0.5;
my $DIV_PWD_URL_font_size_em = magstep 0;
my $DIV_SEPARATOR_size_ex = magstep 6;
my $DIV_TITLE_font_size_em = magstep 5.5;
my $TABLE_border_size_ch = 0.2;
my $TD_border_size_ch = 0.2;
my $TD_padding_LR_size_ch = 0.4;
my $TD_padding_TB_size_ex = 0.2;
my $TD_size_ch = 10;

my $DIV_SEPARATOR_width_ch = 7 * ($TD_size_ch
                                  + 2 * $TD_padding_LR_size_ch
                                  + 2 * $TD_border_size_ch);

my $html_head = <<____END_HTML_HEAD____;
   <TITLE>$TITLE</TITLE>
   <SCRIPT>
   function clock() {
      var date = new Date();
      var time = date.toLocaleTimeString().replace (/:\\d\\d\\s/, " ");
      document.getElementById("clock").innerHTML = time;
      setTimeout (clock, 10 * 1000);
   }
   setTimeout (clock, 1);
   </SCRIPT>
   <STYLE>
   BODY {
      font-size: ${BODY_font_size_em}em;
      font-family: monospace;
      color: $COLOR{FG_PLAIN} !important;
      background-color: $COLOR{BG_EMPTY} !important;
   }
   DIV.CLOCK {
      font-size: ${DIV_CLOCK_font_size_em}em;
      margin-right: ${DIV_CLOCK_margin_right_ch}ch;
      text-align: right;
      font-weight: bold;
      padding-top: ${DIV_CLOCK_padding_top_ex}ex;
   }
   DIV.PWD_URL {
      font-size: ${DIV_PWD_URL_font_size_em}em;
      margin-left: 0;
      font-weight: bold;
   }
   A:link {color: $COLOR{FG_LINK}}
   A:visited {color: $COLOR{FG_VISITED}}
   A:hover {color: $COLOR{FG_HOVER}}
   </STYLE>
____END_HTML_HEAD____

my $html_title_table = <<____END_HTML_TITLE_TABLE____;
   <SCRIPT>
   function date_time() {
      var date = new Date();
      var day = date.toDateString().replace (/\\s+\\d{4}\$/, ",\$&")
                                   .replace (/\\s+0/, " ");; 
      var time = date.toLocaleTimeString();
      var display = (day + " @@ " + time).replace (/\\s+/, " ");;
      document.getElementById("date_time").innerHTML = display;
      setTimeout (date_time, 0.25 * 1000);
   }
   setTimeout (date_time, 1);
   </SCRIPT>
   <STYLE>
   DIV.TITLE {
      font-size: ${DIV_TITLE_font_size_em}em;
      font-family: serif;
      margin-left: 0;
      font-weight: bold;
   }
   DIV.SEPARATOR {
      font-size: ${BODY_font_size_em}em;
      height: ${DIV_SEPARATOR_size_ex}ex;
      width: ${DIV_SEPARATOR_width_ch}ch;
      background-color: $COLOR{FG_PLAIN};
   }
   DIV.MONTH {
      height: ${TD_padding_TB_size_ex}ex;
   }
   TABLE {
      font-size: ${BODY_font_size_em}em;
      table-layout: fixed;
      border-style: solid;
      border-width: ${TABLE_border_size_ch}ch;
      border-color: $COLOR{BDR_EMPTY};
      border-spacing: 0;
   }
   TD {
      font-size: ${BODY_font_size_em}em;
      border-style: solid;
      border-width: ${TD_border_size_ch}ch;
      border-color: $COLOR{BDR_EMPTY};
      padding-top: ${TD_padding_TB_size_ex}ex;
      padding-bottom: ${TD_padding_TB_size_ex}ex;
      padding-left: ${TD_padding_LR_size_ch}ch;
      padding-right: ${TD_padding_LR_size_ch}ch;
      vertical-align: top;
      width: ${TD_size_ch}ch;
   }
   TD.EXAM {
      border-color: $COLOR{BDR_EXAM};
      background-color: $COLOR{BG_EXAM};
   }
   TD.DUE {
      border-color: $COLOR{BDR_DUE};
      background-color: $COLOR{BG_DUE};
   }
   TD.DATA {
      border-color: $COLOR{BDR_DATA};
      background-color: $COLOR{BG_DATA};
   }
   </STYLE>
____END_HTML_TITLE_TABLE____

map {s/^\s{3}//mg} $html_head, $html_title_table;

sub print_html_head ($;$) {
   my ($htmlfile, $want_title_table) = @@_;
   print $htmlfile "<HEAD>\n";
   print $htmlfile $html_head;
   print $htmlfile $html_title_table if $want_title_table;
   print $htmlfile "</HEAD>\n";
}

sub print_clock ($) {
   my ($htmlfile) = @@_;
   print $htmlfile "<DIV class=\"CLOCK\">\n";
   print $htmlfile "<SPAN id=\"clock\">&nbsp;</SPAN>\n";
   print $htmlfile "</DIV>\n";
}

sub print_pwd_url($) {
   my ($htmlfile) = @@_;
   print $htmlfile "<DIV class=\"PWD_URL\">\n";
   print $htmlfile "<BR>PWD: $PWD\n";
   print $htmlfile "<BR>URL: <A HREF=$URL>$URL</A>\n";
   print $htmlfile "</DIV>\n";
}

my $readmename = "README.txt";
my $readme_opened = open README, "<$readmename";
my $headerhtml = "HEADER.html";
my $headertxt = "HEADER.txt";
unless (defined $readme_opened) {
   open my $HDRHTML, ">$headerhtml" or die "$0: $headerhtml: $!\n";
   print_html_head $HDRHTML;
   print $HDRHTML "<BODY>\n";
   print_clock $HDRHTML;
   print_pwd_url $HDRHTML;
   print $HDRHTML "</BODY>\n";
   close $HDRHTML;
   unlink $headertxt or warn "$0: $headertxt: $!\n" if -e $headertxt;
   exit;
}

my %duedates;
my $rcsid = "";
my $quarter = "";
my $course_name = "";
my $lectures = "";
my @@registrar;
my $first_time = 1e300;
my $last_time = 0;
my %calendar;
my %month_name;
my $first_month_name;

while (defined (my $line = <README>)) {
   $rcsid = $& and next if $line =~ m/\$(Id): .*?\$/;
   $quarter = $1 and next if $line =~ m/\.\s+Quarter:\s+(.*?)\s*$/;
   $course_name = $1 and next if $line =~ m/\.\s+Course:\s+(.*?)\s*$/;
   $lectures = $1 and next if $line =~ m/\.\s+Lectures:\s+(.*?)\s*$/;
   push @@registrar, $& if $line =~ m|https://registrar\.ucsc\.edu/\S+|;
   if ($line =~ m/$datepat/) {
      my ($date, $wday, $month, $mday, $item) = ($1, $2, $3, $4, $5);
      my $trydate = "$month 1 $year_now";
      my $trytime = str2time $trydate;
      my $newyear = $year_now + ($trytime < $^T - $sec_180days);
      my $duedate = "$month $mday $newyear";
      my $duetime = str2time $duedate;
      $first_time = $duetime if $first_time > $duetime;
      $last_time = $duetime if $last_time < $duetime;
      print "$duedate - not a valid date\n" and next unless $duetime;
      my @@localduetime = localtime $duetime;
      my $chkwday = strftime "%a", @@localduetime;
      if ($wday ne $chkwday) {
         $duedates{$date} = "$date is really $chkwday";
         warn "$duedates{$date}\n";
      }
      my $duetimekey = strftime "%Y-%m-%d", @@localduetime;
      push @@{$duedates{$duetimekey}}, "$date$item\n";
      my $yearweek = yearweek @@localduetime;
      my $daynum = strftime "%w", @@localduetime;
      my $caldate = strftime "%a %b %d", @@localduetime;
      $calendar{$yearweek}[$daynum][0] = $caldate;
      push @@{$calendar{$yearweek}[$daynum]}, $item;
   }elsif ($line =~ m/$maybedate/) {
      warn "$1 - not a valid date\n";
   }
}

close README;
exit $status if $status;

print "$0: quarter: $quarter\n" if $FLAG_DEBUG;
print "$0: course: $course_name\n" if $FLAG_DEBUG;
print "$0: lectures: $lectures\n" if $FLAG_DEBUG;

$first_time -= $daylen while $timenow < $first_time
                         and $first_time <= $last_time;
for (my $time = $first_time;
     $time <= $last_time + $daylen / 2;
     $time += $daylen) {
   my @@gmtime = gmtime $time;
   my $yearweek = yearweek @@gmtime;
   my $daynum = strftime "%w", @@gmtime;
   my $caldate = strftime "%a %b %d", @@gmtime;
   $calendar{$yearweek}[$daynum] = [$caldate]
          unless $calendar{$yearweek}[$daynum];
   my $month_name = strftime "%B %Y", @@gmtime;
   $first_month_name = $month_name unless $first_month_name;
   $month_name{$yearweek}[$daynum] = $month_name;
}

$rcsid =~ s/\$(Id): (.*?)(,v(\s+\S+){3}).*/$2$3/;

sub urlify($) {
   my ($line) = @@_;
   $line =~ s|https:([^,\s])+|<A HREF=$&>$&</A>|
            unless $line =~ m|https:\S+\*|;
   return $line;
}

open my $HDRHTML, ">$headerhtml" or die "$0: $headerhtml: $!\n";
open my $HDRTXT, ">$headertxt" or die "$0: $headertxt: $!\n";

sub print_both(@@) {
   my (@@line) = @@_;
   for my $line (@@line) {
      print $HDRHTML urlify $line;
      $line =~ s/<.*?>//g;
      print $HDRTXT $line unless $line =~ m/^\s*$/;
   }
}

sub ten_chars($) {
   my ($chars) = @@_;
   $chars = substr $chars . " " x 10, 0, 10;
   return $chars;
}

print_html_head $HDRHTML, $readme_opened;
print $HDRHTML "<BODY>\n";
#print_clock $HDRHTML;

my $div_separator = "<BR>\n<DIV class=\"SEPARATOR\"></DIV>\n<BR>\n";
if ($course_name) {
   print $HDRHTML "<BR>\n";
   print $HDRHTML "<DIV class=\"TITLE\">\n";
   print $HDRHTML "<SPAN id=\"date_time\"></SPAN>\n";
   print $HDRHTML "</DIV>\n";
   print $HDRHTML $div_separator;
   print $HDRHTML "<DIV class=\"TITLE\">\n";
   my @@course_info = split m/\s*:\s*/, $course_name;
   push @@course_info, $quarter if $quarter;
   push @@course_info, $lectures if $lectures;
   print $HDRHTML "$_<BR>\n" for @@course_info;
   print $HDRHTML "</DIV>\n";
   print $HDRHTML $div_separator;
}

print_pwd_url $HDRHTML;
print $HDRTXT "PWD: $PWD\n";
print $HDRTXT "URL: $URL\n";

print $HDRHTML "<PRE>\n";
print_both     @@{$duedates{$_}} for sort keys %duedates;
print $HDRTXT  "HEADER: HEADER.txt\n";
print $HDRHTML urlify "HEADER: https:HEADER.html\n";
print $HDRTXT  "README: $rcsid\n";
$rcsid =~ s/\.txt,v/.html,v/;
print $HDRHTML urlify "README: https:$rcsid\n";
my $lecture_log = "Syllabus/README.txt";
if (-r $lecture_log) {
   print $HDRTXT "Lectures: $lecture_log\n";
   print $HDRHTML urlify "Lectures: https:$lecture_log\n";
}
print_both     "Registrar: $_\n" for @@registrar;
print $HDRHTML "</PRE>\n";

my $prev_month;
sub print_month($) {
   my ($month_name) = @@_;
   print $HDRHTML "$month_name\n";
   print $HDRHTML "<DIV class=\"MONTH\"></DIV>\n";
}

sub separate_months ($$) {
   my ($curr_month, $daynum) = @@_;
   $prev_month = $curr_month unless $prev_month;
   if ($curr_month ne $prev_month) {
      if ($daynum > 0) {
         print $HDRHTML "<TD>\n</TD>\n" for $daynum .. 6;
      }
      print $HDRHTML "</TABLE>\n";
      print $HDRHTML "</DIV>\n";
      print $HDRHTML "<BR>\n";
      print $HDRHTML "<DIV>\n";
      print_month $curr_month;
      print $HDRHTML "<TABLE>\n";
      print $HDRHTML "<TD>\n</TD>\n" for 0 .. ($daynum - 1);
      $prev_month = $curr_month;
   }
}

if ($first_time <= $last_time) {
   print $HDRHTML "<DIV>\n";
   print_month $first_month_name if $FLAG_SHOW_MONTHS;
   print $HDRHTML "<TABLE>\n";
   for my $yearweek (sort keys %calendar) {
      print $HDRHTML "<TR>\n";
      for my $daynum (0..6) {
         my $data = $calendar{$yearweek}[$daynum];
         my $month = $month_name{$yearweek}[$daynum];
         print "{$yearweek}[$daynum] = [@@$data] $month\n"
               if $FLAG_DEBUG && $data;
         my $htline = "";
         my $td_tag = "<TD>\n";
         if (defined $data) {
            my ($date, @@info) = @@$data;
            separate_months ($month, $daynum) if $FLAG_SHOW_MONTHS;
            $date =~ s/\s/&nbsp;/g;
            $date =~ s/&nbsp;0/&nbsp;&nbsp;/;
            my $row_count = 1;
            if (@@info) {
               $date = "<B>$date</B>";
               for my $info (@@info) {
                  unless ($info =~ m/^\s*(.*?)\.\s*(https:\S+)?/) {
                     print STDERR "$0: $info: match failed\n";
                     next;
                  };
                  my ($item, $URL) = ($1, $2);
                  my $shortitem = ten_chars $item;
                  $shortitem =~ s/\s+$//;
                  $shortitem =~ s/\s/&nbsp;/g;
                  $shortitem = "<A HREF=$URL>$shortitem</A>"
                          if $URL and $URL !~ m/\*$/;
                  $shortitem = "<B>$shortitem</B>" if $URL;
                  $htline .= "<BR>$shortitem\n";
                  ++$row_count;
                  my $td_class = "DATA";
                  $td_class = "DUE" if $item =~m/LAB|ASG|DUE/;
                  $td_class = "EXAM" if $item =~m/TEST|EXAM/;
                  $td_tag = "<TD class=\"$td_class\">\n";
               }
            }
            $htline = "$date\n" . $htline;
            my $more_rows = $FLAG_MIN_ROWS - $row_count;
            $htline .= "<BR>&nbsp;\n" x $more_rows;
         }
         print $HDRHTML "$td_tag$htline</TD>\n";
      }
      print $HDRHTML "</TR>\n";
   }
   print $HDRHTML "</TABLE>\n";
   print $HDRHTML "</DIV>\n";
}
print $HDRHTML "</BODY>\n";

if ($first_time <= $last_time) {
   sub print_sep_line { print $HDRTXT "+----------" x 7, "+\n" }
   for my $yearweek (sort keys %calendar) {
      print_sep_line;
      my $week = $calendar {$yearweek};
      my $rowcount = max map {$_ && $#$_ || 0} @@$week;
      for my $row (0 .. $rowcount) {
         for my $daynum (0..6) {
            my $day = $week->[$daynum];
            my $data = $day && $day->[$row] || "";
            $data =~ s/^\s*(.*?)\..*/$1/;
            $data =~ s/ 0(\d)/  $1/;
            print $HDRTXT "|", ten_chars $data;
         }
         print $HDRTXT "|\n";
      }
   }
   print_sep_line;
}

close $HDRHTML;
close $HDRTXT;

#system "ls -la $headerhtml $headertxt";
#system "cat $headertxt";

@


1.201
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.200 2020-12-01 15:03:23-08 - - $
d154 1
a154 1
      var day = date.toDateString().replace (/ \\d{4}\$/, ",\$&")
@


1.200
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.199 2020-11-24 16:19:17-08 - - $
d155 1
a155 1
                                   .replace (/\s+0/, " ");; 
@


1.199
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.198 2020-11-24 14:12:06-08 - - $
d154 2
a155 1
      var day = date.toDateString().replace (/ \\d{4}\$/, ",\$&"); 
d311 1
a311 1
     $time <= $last_time + $daylen;
@


1.198
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.197 2020-11-24 13:34:40-08 - - $
d436 4
a439 1
                  $info =~ m/^\s*(.*?)\.\s*(https:\S+)?/;
@


1.197
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.196 2020-11-24 13:32:41-08 - - $
d309 2
a310 2
for (my $time = $first_time - $daylen * 14;
     $time <= $last_time + $daylen * 14;
@


1.196
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.195 2020-11-24 13:31:31-08 - - $
d309 1
a309 1
for (my $time = $first_time - $daylen * 14;;
@


1.195
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.194 2020-11-21 18:34:48-08 - - $
d309 2
a310 2
for (my $time = $first_time;
     $time <= $last_time + $daylen * 8;
@


1.194
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.193 2020-11-18 15:01:44-08 - - $
d260 1
a260 1
my $first_time = 1e1000;
d309 3
a311 1
for (my $time = $first_time; $time <= $last_time; $time += $daylen) {
@


1.193
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.192 2020-11-17 15:29:01-08 - - $
a362 1
   map {s/\s*--\s*/&ndash;/g} @@course_info;
@


1.192
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.191 2020-11-17 15:27:27-08 - - $
d226 1
a226 1
   print $htmlfile "<SPAN id=\"clock\"></SPAN>\n";
@


1.191
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.190 2020-11-11 16:05:00-08 - - $
d363 1
a363 1
   map {s/--/&ndash;/g} @@course_info;
@


1.190
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.189 2020-11-11 16:02:10-08 - - $
d363 1
@


1.189
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.188 2020-11-11 16:00:15-08 - - $
d154 1
a154 2
      var day = date.toDateString().replace (" 0", " ")
                                   .replace (/ \\d{4}\$/, ",\$&"); 
d156 1
a156 1
      var display = day + " @@ " + time;
@


1.188
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.187 2020-11-11 15:57:00-08 - - $
d103 1
a103 1
my $DIV_TITLE_font_size_em = magstep 5.25;
@


1.187
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.186 2020-11-10 16:08:48-08 - - $
d103 1
a103 1
my $DIV_TITLE_font_size_em = magstep 5;
@


1.186
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.185 2020-11-10 16:06:17-08 - - $
d102 1
a102 1
my $DIV_SEPARATOR_size_ex = magstep 4;
@


1.185
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.184 2020-11-10 15:12:47-08 - - $
a118 3
//    var hour = parseInt (date.getHours(), 10);
//    var min = ":" + ("0" + date.getMinutes()).slice (-2);
//    var time = (hour % 12 || 12) + min + (hour < 12 ? " AM" : " PM");
d355 1
a356 1
   print $HDRHTML "<BR>\n";
@


1.184
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.183 2020-11-10 15:12:01-08 - - $
d103 1
a103 1
my $DIV_TITLE_font_size_em = magstep 4;
d154 12
d169 1
d354 1
a354 1
print_clock $HDRHTML;
d358 4
@


1.183
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.182 2020-11-10 15:06:12-08 - - $
d122 1
a122 1
      var time = date.toLocaleTimeString.replace (/:\\d\\d\\s/, " ");
@


1.182
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.180 2020-09-06 22:20:31-07 - - $
d119 4
a122 3
      var hour = parseInt (date.getHours(), 10);
      var min = ":" + ("0" + date.getMinutes()).slice (-2);
      var time = (hour % 12 || 12) + min + (hour < 12 ? " AM" : " PM");
@


1.181
log
@-
@
text
@d119 3
a121 1
      var time = date.toLocaleTimeString().replace (/:\\d\\d\\s/, " ");
a123 6
   }
   function calendar() {
      var date = new Date();
      var day = date.toDateString();
      var time = date.toLocaleTimeString();
      document.getElementById("calendar").innerHTML = day + " " + time;
@


1.180
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.179 2020-08-31 18:24:43-07 - - $
d119 1
a119 3
      var hour = parseInt (date.getHours(), 10);
      var min = ":" + ("0" + date.getMinutes()).slice (-2);
      var time = (hour % 12 || 12) + min + (hour < 12 ? " AM" : " PM");
d122 6
@


1.179
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.178 2020-08-31 18:24:18-07 - - $
d65 1
a65 1
my $PWD = qx(pwd);
@


1.178
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.177 2020-08-31 18:23:49-07 - - $
d98 1
a98 1
my $DIV_CLOCK_font_size_em = magstep 1;
@


1.177
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.176 2020-08-31 18:22:57-07 - - $
d98 1
a98 1
my $DIV_CLOCK_font_size_em = magstep 2;
@


1.176
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.175 2020-08-28 14:36:28-07 - - $
d102 2
a103 2
my $DIV_SEPARATOR_size_ex = magstep 4.5;
my $DIV_TITLE_font_size_em = magstep 4.5;
@


1.175
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.174 2020-08-28 14:26:28-07 - - $
d102 2
a103 2
my $DIV_SEPARATOR_size_ex = magstep 4;
my $DIV_TITLE_font_size_em = magstep 4;
@


1.174
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.173 2020-08-22 14:29:35-07 - - $
d98 1
a98 1
my $DIV_CLOCK_font_size_em = magstep 3;
@


1.173
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.172 2020-08-22 13:35:17-07 - - $
d101 1
a101 1
my $DIV_PWD_URL_font_size_em = magstep 1;
@


1.172
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.171 2020-08-22 12:59:44-07 - - $
d97 7
d106 1
a107 1
my $TD_padding_LR_size_ch = 0.4;
d109 4
a112 8
my $div_bar_size_ch = 7 * ($TD_size_ch
                           + 2 * $TD_padding_LR_size_ch
                           + 2 * $TD_border_size_ch);
my $body_font_size_em = magstep 0;
my $div_title_font_size_em = magstep 4;
my $div_separator_size_ex = magstep 4;
my $div_clock_font_size_em = magstep 3;
my $div_pwd_url_font_size_em = magstep 1;
d129 1
a129 1
      font-size: ${body_font_size_em}em;
d135 2
a136 2
      font-size: ${div_clock_font_size_em}em;
      margin-right: 1ch;
d139 1
a139 1
      padding-top: 0.5ex;
d142 1
a142 1
      font-size: ${div_pwd_url_font_size_em}em;
d155 1
a155 1
      font-size: ${div_title_font_size_em}em;
d160 3
a162 3
      font-size: ${body_font_size_em}em;
      height: ${div_separator_size_ex}ex;
      width: ${div_bar_size_ch}ch;
d169 1
a169 1
      font-size: ${body_font_size_em}em;
d177 1
a177 1
      font-size: ${body_font_size_em}em;
@


1.171
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.170 2020-08-22 12:52:07-07 - - $
d18 1
a18 2
use lib "/afs/cats.ucsc.edu/courses/cse110a-wm/bin";
use lib "/afs/cats.ucsc.edu/courses/cse110a-wm/usr/share/perl5";
@


1.170
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.169 2020-08-20 17:06:24-07 - - $
d18 3
a20 1
use lib "/afs/cats.ucsc.edu/courses/cse111-wm/usr/share/perl5";
@


1.169
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.168 2020-08-20 13:39:15-07 - - $
d26 1
d72 1
a72 1
my %COLOR = (
d74 16
a89 14
   BDR_DATA   => "#00FFFF", # cyan
   BDR_DUE    => "#FFFF00", # yellow
   BDR_EMPTY  => "#00FF00", # green
   BDR_EXAM   => "#FF0000", # red
   BG_DATA    => "#007F7F", # dark cyan
   BG_DUE     => "#7F7F00", # dark yellow
   BG_EMPTY   => "#000000", # black
   BG_EXAM    => "#7F0000", # dark red
   FG_HOVER   => "#FF0000", # red
   FG_LINK    => "#FFFF00", # yellow
   FG_PLAIN   => "#00FF00", # green
   FG_VISITED => "#00FFFF", # cyan

);
@


1.168
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.167 2020-08-20 13:38:22-07 wmackey Exp $
d63 1
a63 1
my $PWD = `pwd`;
d65 1
a65 1
my $URL = `pwd2url`;
@


1.167
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.166 2020-08-18 13:40:31-07 - - $
@


1.166
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.165 2020-08-18 01:07:13-07 - - $
@


1.165
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.164 2020-08-16 23:16:41-07 - - $
d73 8
a80 8
   BDR_DATA   => "#00FFFF", # dark cyan
   BDR_DUE    => "#FFFF00", # dark yellow
   BDR_EMPTY  => "#00FF00", # dark gray
   BDR_EXAM   => "#FF0000", # dark red
   BG_DATA    => "#1F7F7F", # dark cyan
   BG_DUE     => "#7F7F1F", # dark yellow
   BG_EMPTY   => "#1F1F1F", # dark gray
   BG_EXAM    => "#7F1F1F", # dark red
@


1.164
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.163 2020-08-16 21:53:53-07 - - $
a31 1
my $FLAG_SHOW_WEEKDAYS = 0;
a168 3
   TABLE.DAYS {
      border-color: $COLOR{BG_EMPTY};
   }
a180 3
   TD.DAYS {
      border-color: $COLOR{BG_EMPTY};
   }
a370 7
   if ($FLAG_SHOW_WEEKDAYS) {
      print $HDRHTML "<TABLE class=\"DAYS\">\n<TR>\n";
      print $HDRHTML "<TD class=\"DAYS\">$_</TD>\n"
            for qw (Sunday Monday Tuesday Wednesday Thursday
                    Friday Saturday);
      print $HDRHTML "</TR></TABLE>\n";
   }
d407 2
a408 6
            if ($FLAG_SHOW_MONTHS && $FLAG_SHOW_WEEKDAYS) {
               $date =~ s/[[:alpha:]]//g;
            }else {
               $date =~ s/\s/&nbsp;/g;
               $date =~ s/&nbsp;0/&nbsp;&nbsp;/;
            }
@


1.163
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.162 2020-08-13 13:23:55-07 - - $
d102 2
a103 2
my $body_size_em = magstep 0;
my $div_title_size_em = magstep 4;
d105 2
a106 2
my $div_clock_size_em = magstep 3;
my $div_pwd_url_size_em = magstep 1;
d123 1
a123 1
      font-size: ${body_size_em}em;
d129 1
a129 1
      font-size: ${div_clock_size_em}em;
d136 1
a136 1
      font-size: ${div_pwd_url_size_em}em;
d149 1
a149 1
      font-size: ${div_title_size_em}em;
d154 1
a154 1
      font-size: ${body_size_em}em;
d159 3
d163 1
a163 1
      font-size: ${body_size_em}em;
d174 1
a174 1
      font-size: ${body_size_em}em;
d377 1
@


1.162
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.161 2020-08-12 01:15:26-07 - - $
d94 2
a95 2
my $TABLE_border_width_ch = 0.2;
my $TD_border_width_ch = 0.2;
d98 5
a102 4
my $table_TD_width_ch = 10;
my $div_bar_width_ch = 7 * ($table_TD_width_ch
                            + 2 * $TD_padding_LR_size_ch
                            + 2 * $TD_border_width_ch);
d123 1
a123 1
      font-size: 1em;
d154 1
a154 1
      font-size: 1em;
d156 1
a156 1
      width: ${div_bar_width_ch}ch;
d160 1
a160 1
      font-size: 1em;
d163 1
a163 1
      border-width: ${TABLE_border_width_ch}ch;
d171 1
a171 1
      font-size: 1em;
d173 1
a173 1
      border-width: ${TD_border_width_ch}ch;
d180 1
a180 1
      width: ${table_TD_width_ch}ch;
@


1.161
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.160 2020-08-12 01:12:13-07 - - $
d105 1
a105 1
my $div_pwd_url_size_em = magstep 2;
@


1.160
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.159 2020-08-12 01:07:53-07 - - $
d103 1
d154 1
a154 1
      height: ${div_title_size_em}em;
@


1.159
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.158 2020-08-12 00:16:31-07 - - $
d102 3
d127 1
a127 1
      font-size: @@{[magstep 3]}em;
d134 1
a134 1
      font-size: @@{[magstep 2]}em;
d147 1
a147 1
      font-size: @@{[magstep 4]}em;
d153 1
a153 1
      height: @@{[magstep 4]}ex;
@


1.158
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.157 2020-08-11 15:43:27-07 - - $
d94 9
d141 1
a141 10
my $TABLE_border_width_ch = 0.2;
my $TD_border_width_ch = 0.2;
my $TD_padding_TB_size_ex = 0.2;
my $TD_padding_LR_size_ch = 0.4;
my $table_TD_width_ch = 10;
my $div_bar_width_ch = 7 * ($table_TD_width_ch
                            + 2 * $TD_padding_LR_size_ch
                            + 2 * $TD_border_width_ch);

my $html_readme = <<____END_HTML_README____;
d193 1
a193 1
____END_HTML_README____
d195 1
a195 1
map {s/^\s{3}//mg} $html_head, $html_readme;
d198 1
a198 1
   my ($htmlfile, $want_readme) = @@_;
d201 1
a201 1
   print $htmlfile $html_readme if $want_readme;
@


1.157
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.156 2020-08-11 15:41:27-07 - - $
d94 1
a94 1
my $html_head = <<__END_HTML_HEAD__;
d121 1
a121 1
   DIV.PWD-URL {
d130 1
a130 1
__END_HTML_HEAD__
d141 1
a141 1
my $html_readme = <<__END_HTML_README__;
d193 1
a193 1
__END_HTML_README__
d214 1
a214 1
   print $htmlfile "<DIV class=\"PWD-URL\">\n";
d405 1
a405 1
         print "{$yearweek}[$daynum] = [@@{[join '|', @@$data]}] $month\n"
@


1.156
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.155 2020-08-11 15:40:14-07 - - $
d298 1
a298 1
   my $month_name = strftime "%B, %Y", @@gmtime;
@


1.155
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.154 2020-08-07 14:17:03-07 - - $
d368 1
a368 2
   print $HDRHTML "<SPAN style=\"font-size: @@{[magstep 0]}em\">",
                  "$month_name</SPAN>\n";
@


1.154
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.153 2020-08-07 14:15:45-07 - - $
d368 1
a368 1
   print $HDRHTML "<SPAN style=\"font-size: @@{[magstep 1]}em\">",
@


1.153
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.152 2020-08-07 11:40:54-07 - - $
d33 1
a33 1
my $FLAG_MIN_ROWS = 2;
@


1.152
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.151 2020-08-07 11:39:10-07 - - $
d33 1
d419 1
d432 1
d440 2
@


1.151
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.150 2020-08-07 00:31:31-07 - - $
d31 3
a33 3
my $SWITCH_SHOW_MONTHS = 1;
my $SWITCH_SHOW_WEEKDAYS = 0;
my $DEBUG = 0;
d284 3
a286 3
print "$0: quarter: $quarter\n" if $DEBUG;
print "$0: course: $course_name\n" if $DEBUG;
print "$0: lectures: $lectures\n" if $DEBUG;
d369 1
a369 1
   if ($SWITCH_SHOW_WEEKDAYS) {
d398 1
a398 1
   print_month $first_month_name if $SWITCH_SHOW_MONTHS;
d406 1
a406 1
               if $DEBUG && $data;
d411 2
a412 2
            separate_months ($month, $daynum) if $SWITCH_SHOW_MONTHS;
            if ($SWITCH_SHOW_MONTHS && $SWITCH_SHOW_WEEKDAYS) {
@


1.150
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.149 2020-08-06 22:30:26-07 - - $
d31 2
d34 1
a363 2
my $separate_months = 1;
my $show_weekdays = 0;
d369 1
a369 1
   if ($show_weekdays) {
d398 1
a398 1
   print_month $first_month_name if $separate_months;
d411 2
a412 2
            separate_months ($month, $daynum) if $separate_months;
            if ($separate_months && $show_weekdays) {
@


1.149
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.148 2020-08-06 22:27:53-07 - - $
d158 3
d173 3
d361 3
d368 7
a376 2
my $separate_months = 1;
my $prev_month;
d411 6
a416 2
            $date =~ s/\s/&nbsp;/g;
            $date =~ s/&nbsp;0/&nbsp;&nbsp;/;
@


1.148
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.147 2020-08-06 21:04:03-07 - - $
d357 1
a357 1
   print $HDRHTML "<SPAN style=\"font-size: @@{[magstep 2]}em\">",
d383 1
a383 1
   print_month $first_month_name;
@


1.147
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.146 2020-08-06 20:57:39-07 - - $
d235 2
d284 1
a284 1
   my $day = strftime "%w", @@gmtime;
d286 5
a290 2
   $calendar{$yearweek}[$day] = [$caldate]
          unless $calendar{$yearweek}[$day];
d355 7
a361 1
my $separate_months = 0;
d364 5
a368 13
   my ($date, $daynum) = @@_;
   if ($date =~ m/^\w+\s+(\w+)\s+\w+$/) {
      my $curr_month = $1;
      $prev_month = $curr_month unless $prev_month;
      if ($curr_month ne $prev_month) {
         if ($daynum > 0) {
            print $HDRHTML "<TD>\n</TD>\n" for $daynum .. 6;
         }
         print $HDRHTML "</TABLE>\n</DIV>\n";
         print $HDRHTML "<BR>\n";
         print $HDRHTML "<DIV>\n<TABLE>\n";
         print $HDRHTML "<TD>\n</TD>\n" for 0 .. ($daynum - 1);
         $prev_month = $curr_month;
d370 8
d383 1
d389 2
a390 1
         print "{$yearweek}[$daynum] = [@@{[join '|', @@$data]}]\n"
d396 1
a396 1
            separate_months ($date, $daynum) if $separate_months;
@


1.146
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.145 2020-08-06 14:35:30-07 - - $
a370 1
   print $HDRHTML $div_separator;
@


1.145
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.144 2020-08-06 14:33:12-07 - - $
d105 2
a108 1
      font-family: monospace;
d111 1
a113 1
      font-size: @@{[magstep 3]}em;
d118 1
a119 1
      font-size: @@{[magstep 2]}em;
d128 4
a131 3
my $border_width_ch = 0.2;
my $padding_TB_size_ex = 0.2;
my $padding_LR_size_ch = 0.4;
d134 2
a135 2
                            + 2 * $padding_LR_size_ch
                            + 2 * $border_width_ch);
d137 1
a137 1
my $html_title = <<__END_HTML_TITLE__;
d140 1
a141 1
      font-size: @@{[magstep 4]}em;
a149 5
   </STYLE>
__END_HTML_TITLE__

my $html_table = <<__END_HTML_TABLE__;
   <STYLE>
d151 1
d154 1
a154 1
      border-width: ${border_width_ch}ch;
a156 1
      font-size: 1em;
d159 1
d161 1
a161 1
      border-width: ${border_width_ch}ch;
d163 4
a166 4
      padding-top: ${padding_TB_size_ex}ex;
      padding-bottom: ${padding_TB_size_ex}ex;
      padding-left: ${padding_LR_size_ch}ch;
      padding-right: ${padding_LR_size_ch}ch;
d183 1
a183 1
__END_HTML_TABLE__
d185 1
a185 1
map {s/^\s{3}//mg} $html_head, $html_title, $html_table;
d187 2
a188 2
sub print_html_head ($;$$) {
   my ($htmlfile, $title, $calendar) = @@_;
d191 1
a191 2
   print $htmlfile $html_title if $title;
   print $htmlfile $html_table if $calendar;
d315 1
a315 1
print_html_head $HDRHTML, $course_name, scalar %calendar;
d319 1
a319 2
my $div_separator = "<DIV class=\"SEPARATOR\"></DIV>\n";
my $vspacer = "<BR>\n";
a320 1
   print $HDRHTML $vspacer;
a321 1
   print $HDRHTML $vspacer;
a327 1
   print $HDRHTML $vspacer;
d371 1
@


1.144
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.143 2020-08-06 14:08:20-07 - - $
d142 1
a142 1
   DIV.BAR {
d322 1
a322 2
my $bar_div = "<DIV class=\"BAR\"></DIV>\n";
#my $vspacer = "<BR style=\"margin: 0.5ex;\">\n";
d326 1
a326 1
   print $HDRHTML $bar_div;
d335 1
a335 1
   print $HDRHTML $bar_div;
@


1.143
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.142 2020-08-06 13:54:34-07 - - $
a147 7
   HR.THICK {
      background-color: $COLOR{FG_PLAIN};
      height: 1ex;
      width: 80%;
      text-align: left;
      margin-left: 0;
   }
d322 3
a324 1
#my $hrline = "<HR class=\"THICK\">\n";
d326 3
a328 1
   print $HDRHTML "<DIV class=\"BAR\"></DIV>\n";
a332 1
#  print $HDRHTML $hrline;
a333 1
#  print $HDRHTML $hrline;
d335 2
a336 1
   print $HDRHTML "<DIV class=\"BAR\"></DIV>\n";
a369 1
#        print $HDRHTML "<HR style=\"size: 0; border: 0;\">\n";
@


1.142
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.141 2020-08-06 00:19:29-07 - - $
d127 7
a133 3
my $border_width = "0.2"; # ch
my $padding_TB_size = "0.2"; # ex
my $padding_LR_size = "0.4"; # ch
d145 1
a145 1
      width: @@{[7 * (10 + $border_width) + 16 * $padding_LR_size]}ch;
d163 1
a163 1
      border-width: ${border_width}ch;
d170 1
a170 1
      border-width: ${border_width}ch;
d172 4
a175 4
      padding-top: ${padding_TB_size}ex;
      padding-bottom: ${padding_TB_size}ex;
      padding-left: ${padding_LR_size}ch;
      padding-right: ${padding_LR_size}ch;
d177 1
@


1.141
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.140 2020-08-05 23:44:20-07 - - $
d110 1
a110 1
      margin-right: 0.5em;
d127 4
d138 6
a153 3
my $border_width = "0.1em";
my $padding_TB_size = "0.2ex";
my $padding_LR_size = "0.2em";
d159 1
a159 1
      border-width: $border_width;
d166 1
a166 1
      border-width: $border_width;
d168 4
a171 4
      padding-top: $padding_TB_size;
      padding-bottom: $padding_TB_size;
      padding-left: $padding_LR_size;
      padding-right: $padding_LR_size;
d324 1
a324 2
print $HDRHTML "<DIV class=\"TITLE\">\n";
my $hrline = "<HR class=\"THICK\">\n";
d326 2
d331 1
a331 1
   print $HDRHTML $hrline;
d333 3
a335 1
   print $HDRHTML $hrline;
d337 1
a337 1
print $HDRHTML "</DIV>\n";
a338 1

@


1.140
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.139 2020-08-04 14:32:54-07 - - $
d136 1
a137 1
      height: 1ex;
@


1.139
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.138 2020-08-04 13:57:59-07 - - $
d135 1
a135 1
      border: 0.5ex solid $COLOR{FG_PLAIN};
d137 1
@


1.138
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.137 2020-08-04 13:57:31-07 - - $
d347 1
a347 1
my $separate_months = 1;
d359 2
a360 1
         print $HDRHTML "<HR style=\"size: 0; border: 0;\">\n";
@


1.137
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.136 2020-08-04 13:48:04-07 - - $
d356 1
a356 1
#           print $HDRHTML "<TD>\n</TD>\n" for $daynum .. 6;
@


1.136
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.135 2020-08-04 12:51:21-07 - - $
d356 1
a356 1
            print $HDRHTML "<TD>\n</TD>\n" for $daynum .. 6;
@


1.135
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.134 2020-08-02 02:33:56-07 - - $
d347 20
d380 1
@


1.134
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.133 2020-08-02 02:30:35-07 - - $
a163 1
      <!-- width: @@{[100 / 7]}7%; -->
@


1.133
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.132 2020-08-02 02:29:47-07 - - $
d81 1
a81 1
   FG_VISITEd => "#00FFFF", # cyan
d122 1
a122 1
   A:visited {color: $COLOR{FG_VISITEd}}
@


1.132
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.131 2020-08-01 14:04:14-07 - - $
d99 1
a99 1
      setTimeout (clock, 15 * 1000);
@


1.131
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.130 2020-07-31 22:46:43-07 - - $
d99 1
a99 1
      setTimeout (clock, 30 * 1000);
d149 1
d164 1
a164 1
      width: @@{[100 / 7]}7%;
@


1.130
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.129 2020-07-31 00:39:35-07 - - $
d166 1
a166 1
   TD.exam {
d170 1
a170 1
   TD.due {
d174 1
a174 1
   TD.data {
d374 3
a376 3
                  my $td_class = "data";
                  $td_class = "due" if $item =~m/LAB|ASG|DUE/;
                  $td_class = "exam" if $item =~m/TEST|EXAM/;
@


1.129
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.128 2020-07-31 00:36:28-07 - - $
d74 2
a75 2
   BG_DATA    => "#1F9F9F", # dark cyan
   BG_DUE     => "#9F9F1F", # dark yellow
d77 1
a77 1
   BG_EXAM    => "#9F1F1F", # dark red
d143 1
a143 1
my $border_width = "0.09em";
@


1.128
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.127 2020-07-30 19:55:13-07 - - $
d143 1
a143 1
my $border_width = "0.lem";
@


1.127
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.126 2020-07-30 16:35:13-07 - - $
d143 1
a143 1
my $border_width = "0.1em";
@


1.126
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.125 2020-07-30 16:34:31-07 - - $
d153 1
d317 1
a317 1
my $hrline = "<HR class=\"THICK\">";
d348 1
a348 1
   print $HDRHTML "\n";
d387 1
@


1.125
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.124 2020-07-30 16:33:49-07 - - $
d6 1
a6 1
#    
d100 1
a100 1
   }    
d168 1
a168 1
   }    
d172 1
a172 1
   }    
d176 1
a176 1
   }    
@


1.124
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.123 2020-07-30 16:24:11-07 - - $
d99 1
a99 1
      setTimeout (clock, 20000);
@


1.123
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.121 2020-07-30 16:11:19-07 - - $
d99 1
a99 1
      setTimeout (clock, 15000);
@


1.122
log
@-
@
text
@d356 1
a356 1
         my $td_tag = "<TD>";
d376 1
a376 1
                  $td_tag = "<TD class=\"$td_class\">";
d379 1
d381 1
a381 1
         print $HDRHTML "$td_tag\n$date\n$htline</TD>\n";
@


1.121
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.120 2020-07-30 15:41:37-07 - - $
d372 1
a372 1
                  $htline .= "<BR>$shortitem";
a378 1
            $htline = "\n$date\n" . $htline;
d380 1
a380 1
         print $HDRHTML "$td_tag$htline\n</TD>\n";
@


1.120
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.119 2020-07-30 15:07:35-07 - - $
d143 1
a143 1
my $border_width = "0.125em";
d145 1
a145 1
my $padding_LR_size = "0.25em";
@


1.119
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.118 2020-07-30 14:49:18-07 - - $
d143 1
a143 1
my $border_size = "0.125em";
d149 3
a151 1
      border: $border_size solid $COLOR{BDR_EMPTY};
d155 3
a157 1
      border: $border_size solid $COLOR{BDR_EMPTY};
d166 1
a166 1
      border: $border_size solid $COLOR{BDR_EXAM};
d170 1
a170 1
      border: $border_size solid $COLOR{BDR_DUE};
d174 1
a174 1
      border: $border_size solid $COLOR{BDR_DATA};
@


1.118
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.117 2020-07-30 14:48:49-07 - - $
d87 1
a87 1
   return 1.2 ** $step * 100;
d112 1
a112 1
      font-size: @@{[magstep 3]}%;
d118 1
a118 1
      font-size: @@{[magstep 2]}%;
d131 1
a131 1
      font-size: @@{[magstep 4]}%;
@


1.117
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.116 2020-07-30 12:17:09-07 - - $
d135 1
a135 1
      border: 0.75ex solid $COLOR{FG_PLAIN};
@


1.116
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.115 2020-07-30 12:16:04-07 - - $
d135 1
a135 1
      border: 0.5ex solid $COLOR{FG_PLAIN};
@


1.115
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.114 2020-07-30 11:52:40-07 - - $
d197 2
a198 2
   print $htmlfile "PWD: $PWD<BR>\n";
   print $htmlfile "URL: <A HREF=$URL>$URL</A><BR>\n";
@


1.114
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.113 2020-07-30 11:45:42-07 - - $
d197 2
a198 2
   print $htmlfile "<BR>PWD: $PWD\n";
   print $htmlfile "<BR>URL: <A HREF=$URL>$URL</A>\n";
@


1.113
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.112 2020-07-26 00:13:34-07 - - $
d114 1
a114 1
      padding-top: 0.5em;
d135 1
a135 1
      border: 0.5em solid $COLOR{FG_PLAIN};
d143 3
a145 3
my $border_size = 1 / 8 . "em";
my $padding_TB_size = 1 / 6 . "em";
my $padding_LR_size = 1 / 4 . "em";
@


1.112
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.111 2020-07-24 22:25:20-07 - - $
d114 1
a114 1
      padding-top: 0.5ex;
d118 1
a118 1
      font-size: @@{[magstep 3]}%;
d131 1
a131 1
      font-size: @@{[magstep 4.5]}%;
d135 1
a135 1
      border: 0.5ex solid $COLOR{FG_PLAIN};
@


1.111
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.110 2020-07-24 00:28:14-07 - - $
d74 2
a75 2
   BG_DATA    => "#1F7F7F", # dark cyan
   BG_DUE     => "#7F7F1F", # dark yellow
d77 1
a77 1
   BG_EXAM    => "#7F1F1F", # dark red
@


1.110
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.109 2020-07-23 18:16:59-07 - - $
d95 1
a95 1
      var h24 = parseInt (date.getHours(), 10);
d97 1
a97 1
      var time = (h24 % 12 || 12) + min + (h24 < 12 ? " AM" : " PM");
@


1.109
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.108 2020-07-23 14:50:05-07 - - $
d143 3
a145 3
my $border_size = 1 / 7 . "em";
my $padding_TB_size = 1 / 4 . "em";
my $padding_LR_size = 1 / 2 . "em";
@


1.108
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.107 2020-07-23 14:48:07-07 - - $
d74 2
a75 2
   BG_DATA    => "#1F9F9F", # dark cyan
   BG_DUE     => "#9F9F1F", # dark yellow
d77 1
a77 1
   BG_EXAM    => "#9F1F1F", # dark red
@


1.107
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.106 2020-07-23 14:45:24-07 - - $
d145 1
a145 1
my $padding_LR_size = 1 / 3 . "em";
@


1.106
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.105 2020-07-23 14:44:41-07 - - $
d408 1
a408 1
system "ls -la $headerhtml $headertxt";
@


1.105
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.104 2020-07-23 14:43:04-07 - - $
a61 1
print "$0: pwd = $PWD\n";
d66 1
a66 1
print "$0: $TITLE\n" if $DEBUG;
@


1.104
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.103 2020-07-23 14:24:59-07 - - $
d62 1
@


1.103
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.102 2020-07-23 14:21:59-07 - - $
a337 2
}else {
   print STDERR "$0: $lecture_log: not readable\n";
@


1.102
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.101 2020-07-23 13:58:46-07 - - $
d144 2
a145 1
my $padding_size = 1 / 4 . "em";
d154 4
a157 4
      padding-top: $padding_size;
      padding-bottom: $padding_size;
      padding-left: $padding_size;
      padding-right: $padding_size;
@


1.101
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.100 2020-07-23 13:56:48-07 - - $
d143 2
d148 1
a148 1
      border: 2px solid $COLOR{BDR_EMPTY};
d152 5
a156 5
      border: 2px solid $COLOR{BDR_EMPTY};
      padding-top: 0.333ex;
      padding-bottom: 0.333ex;
      padding-left: 0.333em;
      padding-right: 0.333em;
d161 1
a161 1
      border: 2px solid $COLOR{BDR_EXAM};
d165 1
a165 1
      border: 2px solid $COLOR{BDR_DUE};
d169 1
a169 1
      border: 2px solid $COLOR{BDR_DATA};
@


1.100
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.99 2020-07-23 13:40:23-07 - - $
d114 1
a114 1
      padding-top: 4px;
d147 1
a147 1
      border-spacing: 0px;
@


1.99
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.98 2020-07-23 13:38:18-07 - - $
d110 1
d117 1
a117 1
      margin: 0 auto;
d130 1
a130 1
      margin: 0 auto;
d187 1
a187 1
   print $htmlfile "<SPAN id=\"clock\"></SPAN>&nbsp;\n";
@


1.98
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.97 2020-07-23 13:33:36-07 - - $
d66 1
a66 1
print "$0: $TITLE\n";
d261 3
a263 3
print "$0: quarter: $quarter\n";
print "$0: course: $course_name\n";
print "$0: lectures: $lectures\n";
@


1.97
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.96 2020-07-23 13:17:00-07 - - $
d31 1
d347 2
@


1.96
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.95 2020-07-23 13:13:06-07 - - $
d185 1
a185 1
   print $htmlfile "<SPAN id=\"clock\"></SPAN>&thinsp;\n";
@


1.95
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.94 2020-07-23 13:11:36-07 - - $
d185 1
a185 1
   print $htmlfile "<SPAN class=\"CLOCK\" id=\"clock\"></SPAN>&thinsp;\n";
@


1.94
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.93 2020-07-23 13:07:46-07 - - $
d95 1
a95 1
      var min = ":" + ("0" + date.getMinutes()).slice (-3);
@


1.93
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.92 2020-07-21 21:42:13-07 - - $
d95 1
a95 1
      var min = (":0" + date.getMinutes()).slice (-3);
@


1.92
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.91 2020-07-21 21:07:24-07 - - $
d93 4
a96 3
      var time = ('0' + (new Date()).toLocaleTimeString()).slice(-11);
      time = time.substring(0,5) + time.substring(8);
      if (time.charAt(0) == '0') time = time.substring(1);
d302 1
a302 1
print_html_head $HDRHTML, $course_name, %calendar > 0;
d404 1
a404 1
system "cat $headertxt";
@


1.91
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.90 2020-07-21 18:10:53-07 - - $
d113 1
a113 1
   DIV.TITLE {
d115 1
a115 1
      font-size: @@{[magstep 4.5]}%;
d118 9
a126 1
   DIV.SUBTITLE {
d128 1
a128 1
      font-size: @@{[magstep 3]}%;
a136 3
   A:link {color: $COLOR{FG_LINK}}
   A:visited {color: $COLOR{FG_VISITEd}}
   A:hover {color: $COLOR{FG_HOVER}}
d138 1
a138 1
__END_HTML_HEAD__
d170 1
a170 1
map {s/^\s{3}//mg} $html_head, $html_table;
d172 2
a173 2
sub print_html_head ($;$) {
   my ($htmlfile, $calendar) = @@_;
d176 1
d190 1
a190 1
   print $htmlfile "<DIV class=\"SUBTITLE\">\n";
d301 1
a301 1
print_html_head $HDRHTML, %calendar > 0;
a305 1
my @@course_info = split m/\s*:\s*/, $course_name;
d307 2
a308 1
if (@@course_info) {
a310 1
   my @@lectures = $lectures ? ($lectures) : ();
@


1.90
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.89 2020-07-21 18:10:25-07 - - $
d69 4
d138 1
a138 1
      border: 2px solid;
d142 1
a142 1
      border: 2px solid;
d151 1
d155 1
d159 1
@


1.89
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.88 2020-07-21 18:09:54-07 wmackey Exp $
d93 1
a93 1
      setTimeout (clock, 1000);
@


1.88
log
@*** empty log message ***
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.87 2020-07-21 17:54:02-07 - - $
@


1.87
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.86 2020-07-21 00:12:51-07 - - $
@


1.86
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.85 2020-07-20 22:32:09-07 - - $
d89 1
a89 2
      var date = new Date(); 
      var time = ('0' + date.toLocaleTimeString()).slice(-11);
d93 1
a93 1
      setTimeout (clock, 10e3);
a192 1
   print $HDRHTML "<P>&nbsp;</P>\n";
a310 1
print $HDRHTML "<P>&nbsp;</P>\n";
a323 1
print $HDRHTML "<P>&nbsp;</P>\n";
a324 1
print $HDRHTML "<P>&nbsp;</P>\n";
a364 1
print $HDRHTML "<P>&nbsp;</P>\n";
@


1.85
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.84 2020-07-20 22:30:59-07 - - $
d94 1
a94 1
      setTimeout (clock, 10 * 1000);
d194 1
a194 1
   print $HDRHTML "<P>\n";
d313 1
a313 1
print_both     "&nbsp;\n";
d327 1
a327 1
print_both     "&nbsp;\n";
d329 1
a329 1
print_both     "<P>\n";
d370 1
a370 1
print $HDRHTML "<P>\n";
@


1.84
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.83 2020-07-20 22:22:37-07 - - $
d194 1
d370 1
@


1.83
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.82 2020-07-20 17:15:08-07 - - $
d194 1
a390 1
print $HDRHTML "</BODY>\n";
@


1.82
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.81 2020-07-20 17:11:40-07 - - $
a85 1
   <HEAD>
d87 11
d104 5
a108 5
   HR.THICK {
      border: 0.5ex solid $COLOR{FG_PLAIN};
      width: 80%;
      text-align: left;
      margin-left: 0;
d120 5
a124 5
   DIV.CLOCK {
      text-align: right;
      font-size: @@{[magstep 3]}%;
      font-weight: bold;
      padding-top: 4px;
d126 8
a155 3
   A:link {color: $COLOR{FG_LINK}}
   A:visited {color: $COLOR{FG_VISITEd}}
   A:hover {color: $COLOR{FG_HOVER}}
d157 1
a157 13
   <SCRIPT>
   function clock() {
      var date = new Date(); 
      var time = ('0' + date.toLocaleTimeString()).slice(-11);
      time = time.substring(0,5) + time.substring(8);
      if (time.charAt(0) == '0') time = time.substring(1);
      document.getElementById("clock").innerHTML = time;
      setTimeout (clock, 10 * 1000);
   }    
   setTimeout (clock, 1);
   </SCRIPT>
   </HEAD>
__END_HTML_HEAD__
d159 1
a159 1
$html_head =~ s/^\s{3}//mg;
d162 2
a163 1
   my ($htmlfile, $calendar_table) = @@_;
d165 2
d288 1
a288 1
print_html_head $HDRHTML, 1;
d390 1
@


1.81
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.80 2020-07-20 17:07:31-07 - - $
d319 1
@


1.80
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.79 2020-07-20 17:02:56-07 - - $
d305 1
a305 1
print_both     "<P>\n";
@


1.79
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.78 2020-07-20 17:02:17-07 - - $
d305 1
@


1.78
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.77 2020-07-20 17:01:26-07 - - $
a292 1
   map {s/\s+/ /g} @@course_info;
@


1.77
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.76 2020-07-20 16:54:49-07 - - $
a293 1
   map {s/\s+--\s+/ &mdash; /g} @@course_info;}
@


1.76
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.75 2020-07-20 16:42:31-07 - - $
d293 2
a294 1
   map {s/\s+/ /} @@course_info;
@


1.75
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.74 2020-07-20 16:37:42-07 - - $
d102 1
a102 1
      font-size: @@{[magstep 5]}%;
d294 3
a296 1
   print $HDRHTML "<P>$_\n" for $hrline, @@course_info, $hrline;
a298 1
print $HDRHTML "<P>\n";
@


1.74
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.73 2020-07-20 16:16:29-07 - - $
d102 1
a102 1
      font-size: @@{[magstep 4]}%;
@


1.73
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.72 2020-07-20 16:01:07-07 - - $
d103 1
d108 1
d113 1
a147 1
      time = "<B>" + time + "&thinsp;</B>";
d166 1
a166 1
   print $htmlfile "<SPAN class=\"CLOCK\" id=\"clock\">&nbsp;</SPAN>\n";
a172 1
   print $htmlfile "<B>\n";
a174 1
   print $htmlfile "</B>\n";
a286 1
print $HDRHTML "<B>\n";
a295 1
print $HDRHTML "</B>\n";
a304 2
print $HDRHTML "</PRE>\n";
print $HDRHTML "<B>\n";
d309 1
a309 1
print $HDRHTML urlify "<BR>README: https:$rcsid\n";
d313 1
a313 1
   print $HDRHTML urlify "<BR>Lectures: https:$lecture_log\n";
d317 2
a318 1
print_both     "<BR>Registrar: $_\n" for @@registrar;
a319 1
print $HDRHTML "</B>\n";
@


1.72
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.71 2020-07-20 12:17:25-07 - - $
d67 1
a67 9
my $bg_data_color    = "#1F9F9F"; # dark cyan
my $bg_due_color     = "#9F9F1F"; # dark yellow
my $bg_empty_color   = "#1F1F1F"; # dark gray
my $bg_exam_color    = "#9F1F1F"; # dark red

my $fg_hover_color   = "#FF0000"; # red
my $fg_link_color    = "#FFFF00"; # yellow
my $fg_plain_color   = "#00FF00"; # green
my $fg_visited_color = "#00FFFF"; # cyan
d69 10
a78 1
my $clock_timeout_millisec = 10 * 1000;
d90 2
a91 2
      color: $fg_plain_color !important;
      background-color: $bg_empty_color !important;
d95 1
a95 1
      border: 0.5ex solid $fg_plain_color;
d127 1
a127 1
      background-color: $bg_exam_color;
d130 1
a130 1
      background-color: $bg_due_color;
d133 1
a133 1
      background-color: $bg_data_color;
d135 3
a137 3
   A:link {color: $fg_link_color}
   A:visited {color: $fg_visited_color}
   A:hover {color: $fg_hover_color}
d147 1
a147 1
      setTimeout (clock, $clock_timeout_millisec);
@


1.71
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.70 2020-07-20 12:05:48-07 - - $
d59 5
a63 5
my $pwd = `pwd`;
chomp $pwd;
my $url = `pwd2url`;
chomp $url;
my $TITLE = $pwd;
a76 2
my $title_magstep_pct = 100 * 1.2 ** 0;
my $clock_magstep_pct = 100 * 1.2 ** 2;
d79 5
d91 1
d101 5
a105 1
      font-size: $title_magstep_pct%;
d109 1
a109 1
      font-size: $clock_magstep_pct%;
d122 1
a122 1
      width: 14.2857%;
d144 1
a144 1
      time = "<KBD><B>" + time + "&thinsp;</B></KBD>";
d167 10
d186 1
a186 5
   print $HDRHTML "<H2><B><KBD>\n";
   print $HDRHTML "<BR>PWD: $pwd\n";
   print $HDRHTML "<BR>URL: <A HREF=$url>$url</A>\n";
   print $HDRHTML "</B></KBD></H2>\n";
   print $HDRHTML "<P>\n";
d286 1
a286 1
print $HDRHTML "<H1><B><KBD>\n";
d296 1
a296 1
print $HDRHTML "</B></KBD></H1>\n";
d299 1
a299 5
print $HDRHTML "<H2><B><KBD>\n";
print $HDRHTML "<BR>PWD: $pwd\n";
print $HDRHTML "<BR>URL: <A HREF=$url>$url</A>\n";
print $HDRHTML "</B></KBD></H2>\n";
print $HDRHTML "<P>\n";
d301 2
a302 2
print $HDRTXT "PWD: $pwd\n";
print $HDRTXT "URL: $url\n";
d307 1
a307 1
print $HDRHTML "<KBD><B>\n";
d322 1
a322 1
print $HDRHTML "</KBD></B>\n";
d325 1
a325 1
   print $HDRHTML "<KBD>\n";
d341 1
a341 1
                  my ($item, $url) = ($1, $2);
d345 3
a347 3
                  $shortitem = "<A HREF=$url>$shortitem</A>"
                          if $url and $url !~ m/\*$/;
                  $shortitem = "<B>$shortitem</B>" if $url;
@


1.70
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.69 2020-07-20 01:39:35-07 - - $
a103 2
   BUTTON.CLOCK {
   }    
@


1.69
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.68 2020-07-20 01:15:01-07 - - $
d79 1
d101 2
a104 5
      font-size: $clock_magstep_pct%;
      color: $fg_plain_color !important;
      background-color: $bg_empty_color !important;
      border: 3px solid $fg_plain_color;
      padding-top: 2px;
a132 1
   var no_seconds = 1;
d134 3
a136 3
      var dt = new Date(); 
      var time = ('0' +dt.toLocaleTimeString()).slice(-11);
      if (no_seconds) time = time.substring(0,5) + time.substring(8);
d138 1
a138 1
      time = "<KBD><B>" + time + "</B></KBD>";
d140 1
a140 1
      setTimeout (clock, 500);
a141 3
   function flip() {
      no_seconds = ! no_seconds;
   }
d157 1
a157 2
   print $htmlfile "<BUTTON class=\"CLOCK\" id=\"clock\" onclick=\"flip()\">"
                 . "&nbsp;</BUTTON>\n";
@


1.68
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.67 2020-07-19 23:05:24-07 - - $
d105 2
a106 1
      border: 2px solid $fg_plain_color;
@


1.67
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.66 2020-07-19 19:55:17-07 - - $
a78 1
my $clock_interval = 1000 * 5; # milliseconds
d100 2
d103 4
a106 1
   }
d134 1
d138 1
a138 1
      time = time.substring(0,5) + time.substring(8);
d140 3
a142 2
      document.getElementById("clock").innerHTML = time + '&nbsp;';
      setTimeout (clock, $clock_interval);
d144 3
d162 2
a163 1
   print $htmlfile "<TT><B><SPAN id=\"clock\">&nbsp;</SPAN></B></TT>\n";
d176 1
a176 1
   print $HDRHTML "<H2><B><TT>\n";
d179 1
a179 1
   print $HDRHTML "</B></TT></H2>\n";
d280 1
a280 1
print $HDRHTML "<H1><B><TT>\n";
d290 1
a290 1
print $HDRHTML "</B></TT></H1>\n";
d293 1
a293 1
print $HDRHTML "<H2><B><TT>\n";
d296 1
a296 1
print $HDRHTML "</B></TT></H2>\n";
d305 1
a305 1
print $HDRHTML "<TT><B>\n";
d320 1
a320 1
print $HDRHTML "</TT></B>\n";
d323 1
a323 1
   print $HDRHTML "<TT>\n";
@


1.66
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.65 2020-07-19 18:28:02-07 - - $
d136 1
d138 1
a138 1
   setInterval (clock, $clock_interval);
@


1.65
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.64 2020-07-19 18:25:32-07 - - $
a129 1
   var no_seconds = 1;
d133 1
a133 1
      if (no_seconds) time = time.substring(0,5) + time.substring(8);
a136 3
   function flip() {
      no_seconds = ! no_seconds;
   }    
d152 1
a152 2
#  print $htmlfile "<TT><SPAN id=\"clock\" onclick=\"flip()\">&nbsp;</SPAN></TT>\n";
   print $htmlfile "<TT><SPAN id=\"clock\">&nbsp;</SPAN></TT>\n";
@


1.64
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.63 2020-07-19 18:08:12-07 - - $
d79 1
a79 1
my $clock_interval = 1000 * 10; # milliseconds
@


1.63
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.62 2020-07-19 18:06:31-07 - - $
d79 1
a79 1
my $clock_interval = 1000 * 5; # milliseconds
d130 1
d132 1
a132 1
      var dt = new Date();
d134 7
a140 4
      var min = time.substring(0,5) + time.substring(8);
      if (min.charAt(0) == '0') min = min.substring(1);
      document.getElementById("clock").innerHTML = min + '&nbsp;';
   }
d156 1
@


1.62
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.61 2020-07-19 17:22:57-07 - - $
d79 1
a79 1
my $clock_interval = 1000 * 10; # milliseconds
@


1.61
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.60 2020-07-19 17:20:07-07 - - $
d79 1
a79 1
my $clock_interval = 1000 * 15; # milliseconds
a136 1
   clock();
@


1.60
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.59 2020-07-19 17:09:49-07 - - $
d79 1
a79 1
my $clock_interval = 1000 * 10; # milliseconds
d137 1
@


1.59
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.58 2020-07-19 17:01:10-07 - - $
d79 1
a79 1
my $clock_interval = 1000 * 15; # milliseconds
d130 8
a137 7
      function clock() {
         var dt = new Date();
         var time = ('0' +dt.toLocaleTimeString()).slice(-11);
         var min = time.substring(0,5) + time.substring(8);
         document.getElementById("clock").innerHTML = min + '&numsp;';
      }
      setInterval (clock, 1000);
d152 1
a152 1
   print $htmlfile "<TT><SPAN id=\"clock\">&numsp;</SPAN></TT>\n";
@


1.58
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.57 2020-07-19 16:58:31-07 - - $
a100 1
      margin-right: 1m;
d134 1
a134 1
         document.getElementById("clock").innerHTML = min;
d151 1
a151 1
   print $htmlfile "<TT><SPAN id=\"clock\"></SPAN>&nbsp;</TT>\n";
@


1.57
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.56 2020-07-19 16:23:50-07 - - $
d152 1
a152 1
   print $htmlfile "<TT>&nbsp;<SPAN id=\"clock\"></SPAN></TT>\n";
@


1.56
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.55 2020-07-19 00:29:26-07 - - $
d77 3
a79 1
my $font_magstep_pct = 100 * 1.2 ** 0;
d97 1
a97 1
      font-size: $font_magstep_pct%;
d99 1
a99 1
   DIV.TIME {
d101 2
a102 1
      margin-right: 1m
d135 1
a135 1
         document.getElementById("clock").innerHTML = time;
d151 2
a152 2
   print $htmlfile "<DIV class=\"TIME\">\n";
   print $htmlfile "<TT><SPAN id=\"clock\"></SPAN></TT>\n";
@


1.55
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.54 2020-07-19 00:28:28-07 - - $
d97 4
d127 9
d146 7
d161 1
d263 1
@


1.54
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.53 2020-07-19 00:27:30-07 - - $
d251 1
a251 1
   map {s/\s+/&nbsp;/} @@course_info;
@


1.53
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.52 2020-07-19 00:26:45-07 - - $
d251 1
a251 1
   map {s/ /&nbsp;/} @@course_info;
@


1.52
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.51 2020-07-16 20:59:03-07 - - $
d247 1
a247 1
if (@@course_name) {
@


1.51
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.50 2020-07-16 20:02:15-07 - - $
d155 1
d165 1
d200 1
d245 1
a245 1
my @@course_name = split m/\s*:\s*/, $course_name;
d248 5
a252 2
   my @@quarter = $quarter ? ($quarter) : ();
   print $HDRHTML "<P>$_\n" for $hrline, @@course_name, @@quarter, $hrline;
@


1.50
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.49 2020-07-15 17:45:09-07 - - $
d89 1
a89 1
      width: 90%;
@


1.49
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.48 2020-07-15 17:43:32-07 - - $
d18 1
a18 4
BEGIN {
   push @@INC, "/afs/cats.ucsc.edu/courses/cse111-wm/usr/share/perl5"
}

@


1.48
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.47 2020-07-15 16:58:14-07 - - $
d80 1
a80 1
my $font_magstep_pct = 100 * 1.2 ** 1;
@


1.47
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.46 2020-07-15 16:54:30-07 - - $
d248 2
a249 3
   print $HDRHTML "<P>$_\n" for $hrline, @@course_name;
   print $HDRHTML "<P>$_\n" $quarter if $quarter;
   print $HDRHTML "<P>$_\n" $hrline;
@


1.46
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.45 2020-07-13 15:57:15-07 - - $
d248 3
a250 2
   print $HDRHTML "<P>$_\n"
         for $hrline, @@course_name, $quarter, $hrline;
@


1.45
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.44 2020-07-13 14:19:51-07 - - $
d247 4
a250 1
print $HDRHTML "<P>$_\n" for $hrline, @@course_name, $quarter, $hrline;
@


1.44
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.43 2020-07-12 22:54:42-07 - - $
d92 1
a92 1
      <!-- width: 90%; -->
@


1.43
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.42 2020-07-12 22:53:29-07 - - $
d70 4
a73 4
my $bg_data_color    = "#2F9F9F"; # dark cyan
my $bg_due_color     = "#9F9F2F"; # dark yellow
my $bg_empty_color   = "#2F2F2F"; # dark gray
my $bg_exam_color    = "#9F2F2F"; # dark red
@


1.42
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.41 2020-07-12 15:26:20-07 - - $
d80 1
a80 1
my $font_magstep_pct = 100 * 1.2 ** 2;
d91 1
a91 1
      border: 0.75ex solid $fg_plain_color;
@


1.41
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.40 2020-07-11 16:41:51-07 - - $
a245 1
my @@vspace = ("&nbsp;");
d247 1
a247 2
print $HDRHTML "<P>$_\n" for @@vspace, $hrline, @@course_name, $quarter,
               $hrline, @@vspace;
@


1.40
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.37 2020-07-10 22:32:36-07 - - $
d70 2
a71 2
my $bg_data_color    = "#2F7F7F"; # dark cyan
my $bg_due_color     = "#7F7F2F"; # dark yellow
d73 1
a73 1
my $bg_exam_color    = "#7F2F2F"; # dark red
d113 9
d290 1
a290 1
         my $td_style = "";
d307 4
a310 4
                  my $bg_color = $bg_data_color;
                  $bg_color = $bg_due_color if $item =~m/LAB|ASG|DUE/;
                  $bg_color = $bg_exam_color if $item =~m/TEST|EXAM/;
                  $td_style = "background-color: $bg_color;"
d315 1
a315 1
         print $HDRHTML "<TD style=\"$td_style\">$htline\n</TD>\n";
@


1.39
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.38 2020-07-11 16:08:40-07 - - $
d19 1
a19 2
   push @@INC, "/afs/cats.ucsc.edu/courses/cse110a-wm/usr/share/perl5";
   $0 =~ m|^(.*)/| and push @@INC, $1;
a20 1
require "html_color.perl-require";
d69 10
@


1.38
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.37 2020-07-10 22:32:36-07 - - $
d19 2
a20 1
   push @@INC, "/afs/cats.ucsc.edu/courses/cse111-wm/usr/share/perl5"
d22 1
a70 10

my $bg_data_color    = "#2F8F8F"; # dark cyan
my $bg_due_color     = "#8F8F2F"; # dark yellow
my $bg_empty_color   = "#2F2F2F"; # dark gray
my $bg_exam_color    = "#8F2F2F"; # dark red

my $fg_hover_color   = "#FF0000"; # red
my $fg_link_color    = "#FFFF00"; # yellow
my $fg_plain_color   = "#00FF00"; # green
my $fg_visited_color = "#00FFFF"; # cyan
@


1.37
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.35 2020-07-10 16:21:38-07 - - $
d70 2
a71 2
my $bg_data_color    = "#2F7F7F"; # dark cyan
my $bg_due_color     = "#7F7F2F"; # dark yellow
d73 1
a73 1
my $bg_exam_color    = "#7F2F2F"; # dark red
d76 1
a76 1
my $fg_link_color    = "#00FFFF"; # cyan
d78 1
a78 1
my $fg_visited_color = "#FFFF00"; # yellow
@


1.36
log
@-
@
text
@d70 2
a71 2
my $bg_data_color    = "#2F9F9F"; # dark cyan
my $bg_due_color     = "#9F9F2F"; # dark yellow
d73 1
a73 1
my $bg_exam_color    = "#9F2F2F"; # dark red
d92 1
a92 1
      width: 90%;
d239 2
a240 5
print $HDRHTML "<P>$_\n" for @@vspace, $hrline;
print $HDRHTML "<UL>\n";
print $HDRHTML "<P><LI>$_</LI>\n" for @@course_name, $quarter;
print $HDRHTML "</UL>\n";
print $HDRHTML "<P>$_\n" for $hrline, @@vspace;
@


1.35
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.34 2020-07-10 16:09:32-07 - - $
d70 2
a71 2
my $bg_data_color    = "#2F7F7F"; # dark cyan
my $bg_due_color     = "#7F7F2F"; # dark yellow
d73 1
a73 1
my $bg_exam_color    = "#7F2F2F"; # dark red
d92 1
a92 1
      <!-- width: 90%; -->
d239 5
a243 2
print $HDRHTML "<P>$_\n" for @@vspace, $hrline, @@course_name, $quarter,
               $hrline, @@vspace;
@


1.34
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.33 2020-07-09 21:28:02-07 - - $
d106 4
a109 4
      padding-top: 2px;
      padding-bottom: 2px;
      padding-left: 5px;
      padding-right: 5px;
@


1.33
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.32 2020-07-08 17:17:40-07 - - $
d70 4
a73 3
my $bg_data_color    = "#3F8F8F"; # dark cyan
my $bg_due_color     = "#8F8F00"; # dark yellow
my $bg_exam_color    = "#8F0000"; # dark red
a74 1
my $bg_empty_color   = "#3F3F3F"; # dark gray
d106 4
a109 1
      padding: 2px 5px 2px 5px;
@


1.32
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.31 2020-07-08 16:34:27-07 - - $
d19 1
a19 1
   push @@INC, "/afs/cats.ucsc.edu/courses/cmps012b-wm/usr/share/perl5"
d70 3
a72 3
my $bg_data_color    = "#5F9F9F"; # dark cyan
my $bg_due_color     = "#9F9F00"; # dark yellow
my $bg_exam_color    = "#9F0000"; # dark red
d74 1
a74 1
my $bg_empty_color   = "#5F5F5F"; # dark gray
@


1.31
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.30 2020-07-08 15:18:56-07 - - $
d70 3
a72 3
my $bg_data_color    = "#6FAFAF"; # dark cyan
my $bg_due_color     = "#AFAF00"; # dark yellow
my $bg_exam_color    = "#AF0000"; # dark red
d74 1
a74 1
my $bg_empty_color   = "#6F6F6F"; # dark gray
@


1.30
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.29 2020-07-08 11:39:45-07 - - $
d70 3
a72 3
my $bg_data_color    = "#3F6F6F"; # dark cyan
my $bg_due_color     = "#6F6F00"; # dark yellow
my $bg_exam_color    = "#6F0000"; # dark red
d74 1
a74 1
my $bg_empty_color   = "#3F3F3F"; # dark gray
d298 1
a298 1
                  $td_style = " background-color: $bg_color;"
@


1.29
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.28 2020-07-08 11:37:50-07 - - $
d70 1
d72 2
a73 2
my $bg_test_color    = "#6F0000"; # dark red
my $bg_data_color    = "#3F6F6F"; # dark cyan
a74 1

d297 1
a297 1
                  $bg_color = $bg_test_color if $item =~m/TEST|EXAM/;
@


1.28
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.27 2020-07-08 10:49:12-07 - - $
d80 1
a80 1
my $font_magstep_pct = 100 * 1.2 ** 3;
@


1.27
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.26 2020-07-08 10:33:36-07 - - $
d71 3
a73 3
my $bg_test_color    = "#6F006F"; # dark magenta
my $bg_data_color    = "#1F6F6F"; # dark cyan
my $bg_empty_color   = "#1F1F1F"; # very dark gray
@


1.26
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.25 2020-07-04 18:28:22-07 - - $
d80 2
d92 1
a92 1
      width: 90%;
d98 1
a98 1
      font-size: 144%;
@


1.25
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.24 2020-07-02 22:35:39-07 - - $
d95 1
@


1.24
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.23 2020-06-30 16:48:09-07 - - $
d95 1
a95 1
      font-size: 120%;
@


1.23
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.22 2020-06-28 22:49:06-07 - - $
d89 1
a89 1
      border: 0.5ex solid $fg_plain_color;
@


1.22
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.21 2020-06-28 20:28:19-07 - - $
d80 36
d118 1
a118 36

   print $htmlfile "<HEAD>\n";
   print $htmlfile "<TITLE>$TITLE</TITLE>\n";
   print $htmlfile "<STYLE>\n";
   print $htmlfile "BODY {\n";
   print $htmlfile "   color: $fg_plain_color !important;\n";
   print $htmlfile "   background-color: $bg_empty_color !important;\n";
   print $htmlfile "}\n";
   print $htmlfile "HR.THICK {\n";
   print $htmlfile "   border: 0.5ex solid $fg_plain_color\n";
   print $htmlfile "}\n";
#  print $htmlfile "H1 {\n";
#  print $htmlfile "   text-align: center;\n";
#  print $htmlfile "}\n";
   print $htmlfile "DIV.TITLE {\n";
   print $htmlfile "   font-size: 120%;\n";
   print $htmlfile "}\n";
   print $htmlfile "A:link {color: $fg_link_color}\n";
   print $htmlfile "A:visited {color: $fg_visited_color}\n";
   print $htmlfile "A:hover {color: $fg_hover_color}\n";

   if ($calendar_table) {
      print $htmlfile "TABLE {\n";
      print $htmlfile "   border: 2px solid;\n";
      print $htmlfile "   border-spacing: 0px;\n";
      print $htmlfile "}\n";
      print $htmlfile "TD {\n";
      print $htmlfile "   border: 2px solid;\n";
      print $htmlfile "   padding: 2px 5px 2px 5px;\n"; # T R B L
      print $htmlfile "   width: 14.2857%;\n";
      print $htmlfile "   vertical-align: top;\n";
      print $htmlfile "}\n";
   }

   print $htmlfile "</STYLE>\n";
   print $htmlfile "</HEAD>\n";
@


1.21
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.20 2020-06-28 19:04:29-07 - - $
d97 1
a97 1
   print $htmlfile "   font-size: 130%;\n";
@


1.20
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.19 2020-06-28 18:32:38-07 - - $
d90 3
d96 2
a97 2
   print $htmlfile ".INDENT {\n";
   print $htmlfile "   margin-left: 10%;\n";
d227 1
a227 1
print $HDRHTML "<DIV class=\"INDENT\">\n";
d230 4
a233 2
my @@vspace = ("&nbsp;", "&nbsp;");
print $HDRHTML "<P>$_\n" for @@vspace, @@course_name, $quarter, @@vspace;
@


1.19
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.18 2020-06-28 16:20:53-07 - - $
d90 5
a94 2
   print $htmlfile "H1 {\n";
   print $htmlfile "   text-align: center;\n";
d96 4
d112 1
a112 3
   print $htmlfile "A:link {color: $fg_link_color}\n";
   print $htmlfile "A:visited {color: $fg_visited_color}\n";
   print $htmlfile "A:hover {color: $fg_hover_color}\n";
a114 1

d224 1
d230 1
@


1.18
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.17 2020-06-28 15:23:45-07 - - $
d70 9
a78 9
my $bg_due_color     = "#5F5F00";
my $bg_test_color    = "#5F005F";
my $bg_data_color    = "#2F5F5F";
my $bg_empty_color   = "#2F2F2F";

my $fg_hover_color   = "#FF0000";
my $fg_link_color    = "#00FFFF";
my $fg_plain_color   = "#00FF00";
my $fg_visited_color = "#FFFF00";
d222 2
a223 1
print $HDRHTML "<P>$_\n" for @@course_name, $quarter;
@


1.17
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.16 2020-06-28 15:14:20-07 - - $
d90 3
d94 1
a94 1
      print $htmlfile "table {\n";
d98 1
a98 1
      print $htmlfile "td {\n";
d221 2
a222 2
print $HDRHTML "<BR>$course_name\n";
print $HDRHTML "<BR>$quarter\n";
d268 1
a268 1
               $date = "<B>$date</B>" if $url;
@


1.16
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.15 2020-06-28 14:55:00-07 - - $
d265 1
a274 1
                  $date = "<B>$date</B>" if $url;
@


1.15
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.14 2020-06-28 14:48:09-07 - - $
d136 1
d141 1
d169 1
d233 2
d247 1
a247 1
print_both     "<BR>REGISTRAR: $_\n" for @@registrar;
a289 1
print $HDRHTML "</PRE>\n";
@


1.14
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.13 2020-06-27 17:06:35-07 - - $
a229 1
print $HDRHTML "</PRE>\n";
d285 1
@


1.13
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.12 2020-06-27 17:05:44-07 - - $
d214 1
a214 1
print $HDRHTML "<H2><B><TT>\n";
d217 3
d222 1
a222 1
print $HDRHTML "<B><TT></H2>\n";
@


1.12
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.11 2020-06-25 19:46:59-07 - - $
d118 1
a118 1
   print $HDRHTML "<H1><B><TT>\n";
d121 1
a121 1
   print $HDRHTML "</B></TT></H1>\n";
d214 1
a214 1
print $HDRHTML "<H1><B><TT>\n";
d219 1
a219 1
print $HDRHTML "<B><TT></H1>\n";
@


1.11
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.10 2020-06-25 19:46:11-07 - - $
a61 1
my $coursepwd = "/afs/cats.ucsc.edu/courses";
d86 1
a86 1
   print $htmlfile "body {\n";
d118 1
a118 1
   print $HDRHTML "<BIG><B><TT>\n";
d121 2
a122 1
   print $HDRHTML "</TT></B></BIG>\n";
d131 1
d138 2
a139 1
   $quarter = $1 and next if $line =~ m/\.\s+Quarter:\s+(.*)/;
d170 2
a171 1
print "$0: quarter $quarter\n";
a212 1
print_both     "<B><BIG><TT>\n";
d214 3
d219 3
d242 1
a242 1
print $HDRHTML "</TT></BIG></B>\n";
@


1.10
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.9 2020-06-25 19:41:59-07 - - $
d98 1
a98 1
      print $htmlfile "   padding: 2px 5px 4px 5px;\n"; # T R B L
@


1.9
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.6 2020-06-24 15:53:48-07 - - $
d98 1
a98 1
      print $htmlfile "   padding: 2px 0px 4px 10px;\n"; # T R B L
@


1.8
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.7 2020-06-25 00:43:23-07 - - $
d68 1
a68 1
$TITLE =~ s|/afs/cats.ucsc.edu/courses/||;
d71 9
a79 9
my $bg_due_color     = "#7F7F00"; # dark yellow
my $bg_test_color    = "#7F007F"; # dark magenta
my $bg_data_color    = "#007F7F"; # dark cyan
my $bg_empty_color   = "#000000"; # black

my $fg_hover_color   = "#FF0000"; # red
my $fg_link_color    = "#00FFFF"; # cyan
my $fg_plain_color   = "#00FF00"; # green
my $fg_visited_color = "#FFFF00"; # yellow
d98 1
a98 1
      print $htmlfile "   padding: 3px 5px 3px 5px;\n"; # T R B L
d211 6
a216 2
print_both     "$url\n";
print_both     "<BR>$pwd\n";
@


1.7
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.6 2020-06-24 15:53:48-07 - - $
d71 9
a79 9
my $bg_due_color     = "#5F5F00";
my $bg_test_color    = "#5F005F";
my $bg_data_color    = "#2F5F5F";
my $bg_empty_color   = "#2F2F2F";

my $fg_hover_color   = "#FF0000";
my $fg_link_color    = "#00FFFF";
my $fg_plain_color   = "#00FF00";
my $fg_visited_color = "#FFFF00";
d98 1
a98 1
      print $htmlfile "   padding: 2px 5px 2px 5px;\n"; # T R B L
@


1.6
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.5 2020-06-24 15:41:01-07 - - $
d68 1
a68 1
$TITLE =~ s|/afs/cats.ucsc.edu/courses/|~|;
d98 1
a98 1
      print $htmlfile "   padding: 2px 0px 4px 10px;\n"; # T R B L
@


1.5
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.4 2020-06-24 15:36:35-07 - - $
d98 1
a98 1
      print $htmlfile "   padding: 3px;\n";
@


1.4
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.3 2020-06-14 15:43:24-07 - - $
d94 1
a94 1
      print $htmlfile "   border-spacing: 2px;\n";
@


1.3
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.2 2020-06-11 20:01:28-07 - - $
d94 1
a94 1
      print $htmlfile "   border-spacing: 0px;\n";
d99 1
a99 1
      print $htmlfile "   width: 14%;\n";
@


1.2
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.1 2019-10-31 13:32:24-07 - - $
d68 1
a68 3
$TITLE =~ s|/afs/cats.ucsc.edu/courses/||;
$TITLE =~ s/-wm$/*/;
$TITLE =~ s/.*/\U$&/;
@


1.1
log
@-
@
text
@d2 1
a2 1
# $Id: mkheader,v 1.174 2019-09-26 12:24:18-07 - - $
d68 3
a70 1
$TITLE =~ s|/afs/cats.ucsc.edu/courses/|~|;
@
