head	1.20;
access;
symbols;
locks;
comment	@# @;


1.20
date	2020.08.23.07.25.27;	author -;	state -;
branches;
next	1.19;

1.19
date	2020.08.08.22.37.56;	author -;	state -;
branches;
next	1.18;

1.18
date	2020.08.08.22.37.48;	author -;	state -;
branches;
next	1.17;

1.17
date	2020.08.08.22.25.10;	author -;	state -;
branches;
next	1.16;

1.16
date	2020.08.08.22.23.32;	author -;	state -;
branches;
next	1.15;

1.15
date	2020.08.08.22.16.04;	author -;	state -;
branches;
next	1.14;

1.14
date	2020.08.08.21.29.20;	author -;	state -;
branches;
next	1.13;

1.13
date	2020.08.08.21.20.29;	author -;	state -;
branches;
next	1.12;

1.12
date	2020.08.08.07.28.04;	author -;	state -;
branches;
next	1.11;

1.11
date	2020.08.08.07.26.03;	author -;	state -;
branches;
next	1.10;

1.10
date	2020.08.08.07.24.48;	author -;	state -;
branches;
next	1.9;

1.9
date	2020.08.04.01.48.45;	author -;	state -;
branches;
next	1.8;

1.8
date	2020.08.04.01.47.10;	author -;	state -;
branches;
next	1.7;

1.7
date	2020.08.04.00.36.51;	author -;	state -;
branches;
next	1.6;

1.6
date	2020.08.04.00.30.29;	author -;	state -;
branches;
next	1.5;

1.5
date	2020.08.04.00.29.32;	author -;	state -;
branches;
next	1.4;

1.4
date	2020.08.04.00.16.31;	author -;	state -;
branches;
next	1.3;

1.3
date	2020.07.30.18.25.49;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.07.27.21.03.25;	author -;	state -;
branches;
next	1.1;

1.1
date	2020.07.27.19.53.53;	author -;	state -;
branches;
next	;


desc
@@


1.20
log
@-
@
text
@#!/usr/bin/perl
# $Id: shakespeare-quote,v 1.19 2020-08-08 15:37:56-07 - - $

use strict;
use warnings;

$0 =~ s|.*/||;
$SIG{'__DIE__'} = sub {print STDERR "$0: @@_"; exit 1};

my $url = "https://www.opensourceshakespeare.org";
my $cmd = "wget -qO- $url";

open QUOTE, "$cmd |" or die "$cmd: $!";
my $page = join '', <QUOTE>;
close QUOTE;

$page =~ s|^.*?(Quotation of the moment.*?)</div>.*$|$1|si
      or die "$url: quotation not found.\n";
print "$url\n";

$page =~  s/<\s*(P|BR)\s*(\s+.*?)?>\s*/\n/gmi;
my @@page = split m/\n/, $page;

map {
   s/&nbsp;\s*/\x20/gi;          # no-break spaces to spaces
   s/&mdash;/--/gi;              # em dashes to ASCII
   s/<\/?.*?>//gi;               # delete all other HTML tags
   s/[\x80-\xFF]/*/gi;           # replace non-ASCII characters
   s/\s+$//;                     # delete end of line spaces
} @@page;

my $max = 60;
for my $line (@@page) {
   while (length ($line) > $max
       && $line =~ s/^(.{1,$max})\s+(.+)/$2/) {
      print "$1\n";
   }
   print "$line\n";
}

print "\n";
@


1.19
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.18 2020-08-08 15:37:48-07 - - $
a27 1
   s/([.?!])\x20+/$1\x20\x20/gi; # sentences end with 2 spaces
@


1.18
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.17 2020-08-08 15:25:10-07 - - $
d33 1
a33 1
my $max = 55;
@


1.17
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.16 2020-08-08 15:23:32-07 - - $
d25 6
a30 5
   s/&nbsp;\s*/\x20/gi;
   s/&mdash;/--/gi;
   s/<\/?.*?>//gi;
   s/([.?!])\x20+/$1\x20\x20/gi;
   s/\s+$//;
d33 1
a33 1
my $max = 60;
@


1.16
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.15 2020-08-08 15:16:04-07 - - $
d29 1
@


1.15
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.14 2020-08-08 14:29:20-07 - - $
d26 1
a26 1
   s/&mdash;\s*/--/gi;
@


1.14
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.13 2020-08-08 14:20:29-07 - - $
d25 1
a25 1
   s/&nbsp;\s*/ /gi;
@


1.13
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.12 2020-08-08 00:28:04-07 - - $
d21 1
a21 1
$page =~  s/<(P|BR)(\s+.*?)?>\s*/\n/gmi;
@


1.12
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.11 2020-08-08 00:26:03-07 - - $
a5 2

print "$0:\n";
@


1.11
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.10 2020-08-08 00:24:48-07 - - $
d42 1
@


1.10
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.9 2020-08-03 18:48:45-07 - - $
d7 2
a20 1
print "$0:\n";
@


1.9
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.8 2020-08-03 18:47:10-07 - - $
d19 1
@


1.8
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.7 2020-08-03 17:36:51-07 - - $
d22 1
d29 1
a29 1
} $page;
d32 1
a32 1
for my $line (split m/\n/, $page) {
@


1.7
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.6 2020-08-03 17:30:29-07 - - $
d27 1
a27 1
   s/([.?!:])\x20+/$1\x20\x20/gi;
@


1.6
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.5 2020-08-03 17:29:32-07 - - $
d19 1
@


1.5
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.4 2020-08-03 17:16:31-07 - - $
d29 1
a29 1
my $max = 65;
@


1.4
log
@-
@
text
@d2 4
a5 1
# $Id: shakespeare-quote,v 1.3 2020-07-30 11:25:49-07 - - $
d10 2
a11 2
$url = "https://www.opensourceshakespeare.org";
$cmd = "wget -qO- $url";
d29 8
a36 2
print "$url\n$page\n";

@


1.3
log
@-
@
text
@d2 1
a2 1
# $Id: shakespeare-quote,v 1.2 2020-07-27 14:03:25-07 - - $
d17 8
a24 6
$page =~ s|</.*?>||gi;
$page =~ s|<p.*?>|\n|gi;
$page =~ s|<br>|\n|gi;
$page =~ s|&nbsp;| |gi;
$page =~ s|&mdash;|--|gi;
$page =~ s|<.*?>||gi;
@


1.2
log
@-
@
text
@d2 1
a2 1
# $Id$
d5 1
d10 1
a10 1
open QUOTE, "$cmd |" or die "$0: $cmd: $!";
d14 2
a15 4
unless ($page =~ s|^.*?(Quotation of the moment.*?)</div>.*$|$1|si) {
   print STDERR "$0: $url: quotation not found.\n";
   exit 1;
}
@


1.1
log
@-
@
text
@d4 2
d7 1
a7 1
$cmd = "lynx -dump $url";
d10 6
a15 3
print "$url\n\n";
while (<QUOTE>) {
   print and last if m/Quotation of the moment/;
d17 9
a25 5
while (<QUOTE>) {
   last if m/Questions and suggestions/;
   print;
};
close QUOTE;
@
