head	1.40;
access;
symbols;
locks;
comment	@# @;


1.40
date	2020.11.19.02.18.04;	author -;	state -;
branches;
next	1.39;

1.39
date	2020.11.19.02.07.19;	author -;	state -;
branches;
next	1.38;

1.38
date	2020.11.18.22.42.30;	author -;	state -;
branches;
next	1.37;

1.37
date	2020.11.18.21.54.12;	author -;	state -;
branches;
next	1.36;

1.36
date	2020.11.18.21.51.26;	author -;	state -;
branches;
next	1.35;

1.35
date	2020.09.01.20.55.14;	author -;	state -;
branches;
next	1.34;

1.34
date	2020.08.31.04.07.32;	author -;	state -;
branches;
next	1.33;

1.33
date	2020.08.22.20.35.33;	author -;	state -;
branches;
next	1.32;

1.32
date	2020.08.22.19.59.44;	author -;	state -;
branches;
next	1.31;

1.31
date	2020.08.22.19.52.07;	author -;	state -;
branches;
next	1.30;

1.30
date	2020.08.21.00.10.12;	author -;	state -;
branches;
next	1.29;

1.29
date	2020.08.20.20.20.42;	author -;	state -;
branches;
next	1.28;

1.28
date	2020.08.20.20.19.26;	author -;	state -;
branches;
next	1.27;

1.27
date	2020.08.20.20.14.54;	author -;	state -;
branches;
next	1.26;

1.26
date	2020.08.18.20.40.31;	author -;	state -;
branches;
next	1.25;

1.25
date	2020.08.02.09.34.28;	author -;	state -;
branches;
next	1.24;

1.24
date	2020.07.20.23.14.14;	author -;	state -;
branches;
next	1.23;

1.23
date	2020.07.20.19.12.17;	author -;	state -;
branches;
next	1.22;

1.22
date	2020.07.13.21.19.33;	author -;	state -;
branches;
next	1.21;

1.21
date	2020.07.11.23.41.51;	author -;	state -;
branches;
next	1.20;

1.20
date	2020.07.11.23.35.43;	author -;	state -;
branches;
next	1.19;

1.19
date	2020.07.11.23.31.58;	author -;	state -;
branches;
next	1.18;

1.18
date	2020.07.10.23.09.32;	author -;	state -;
branches;
next	1.17;

1.17
date	2020.07.10.04.16.25;	author -;	state -;
branches;
next	1.16;

1.16
date	2020.07.10.04.11.37;	author -;	state -;
branches;
next	1.15;

1.15
date	2020.07.09.02.47.21;	author -;	state -;
branches;
next	1.14;

1.14
date	2020.07.09.00.17.55;	author -;	state -;
branches;
next	1.13;

1.13
date	2020.07.08.23.34.27;	author -;	state -;
branches;
next	1.12;

1.12
date	2020.07.08.22.14.40;	author -;	state -;
branches;
next	1.11;

1.11
date	2020.07.08.22.12.30;	author -;	state -;
branches;
next	1.10;

1.10
date	2020.07.08.18.35.47;	author -;	state -;
branches;
next	1.9;

1.9
date	2020.07.08.07.52.59;	author -;	state -;
branches;
next	1.8;

1.8
date	2020.07.08.07.28.34;	author -;	state -;
branches;
next	1.7;

1.7
date	2020.07.08.04.50.04;	author -;	state -;
branches;
next	1.6;

1.6
date	2020.07.08.04.47.01;	author -;	state -;
branches;
next	1.5;

1.5
date	2020.07.05.01.04.24;	author -;	state -;
branches;
next	1.4;

1.4
date	2020.07.04.04.22.23;	author -;	state -;
branches;
next	1.3;

1.3
date	2020.07.04.04.12.30;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.01.23.00.33.28;	author -;	state -;
branches;
next	1.1;

1.1
date	2019.10.31.20.32.24;	author -;	state -;
branches;
next	;


desc
@@


1.40
log
@-
@
text
@#!/usr/bin/perl
# $Id: txt2html,v 1.39 2020-11-18 18:07:19-08 - - $
#
# NAME
#    txt2html - convert text file to html, editing https?: strings
#
# SYNOPSIS
#    txt2html textfile
#
# DESCRIPTION
#    Reads textfile to replace strings of the form https?:\S+*
#    with the directory name that it matches, if the directory
#    exists.  Creates an html file from the textfile by editing
#    all https?: strings into an html link.  The file is created
#    with the suffix .txt or .text replaced by .html
#    It also converts the text file into Postscript and PDF.
#

use lib "/afs/cats.ucsc.edu/courses/cse110a-wm/bin/perl5lib";

use strict;
use warnings;

use Getopt::Std;
use HTML_Colors;

$0 =~ s|^(.*/)?([^/]+)/*$|$2|;
my $exit_status = 0;
END {exit $exit_status}
sub note(@@) { print STDERR "$0: @@_"; };
$SIG{'__WARN__'} = sub { note @@_; $exit_status = 1; };
$SIG{'__DIE__'} = sub { warn @@_; exit; };

my %opts;
getopts "v", \%opts;
my $verbose = $opts{'v'};

if (@@ARGV != 1) {
   print STDERR "Usage: $0 textfile\n";
   $exit_status = 1;
   exit;
}

my %htchars = qw (& &amp; < &lt; > &gt;);

my %COLOR = HTML_Colors;

my $headtext = <<__END_HEADTEXT__;
   <HEAD>
   <TITLE>~title~</TITLE>
   <STYLE> 
   BODY {
      color: $COLOR{FG_PLAIN};
      background-color: $COLOR{BG_EMPTY};
   }
   A:link {color: $COLOR{FG_LINK}}
   A:visited {color: $COLOR{FG_VISITED}}
   A:hover {color: $COLOR{FG_HOVER}}
   </STYLE>
   </HEAD> 
   <BODY>
   <PRE>
__END_HEADTEXT__
$headtext =~ s/^#.*\n//gm;
$headtext =~ s/^\s{3}//gm;

my $textname = shift;
open TEXTIN, "<$textname" or die "$textname: $!\n";
print STDERR "open <$textname: OK\n" if $verbose;
my @@text = <TEXTIN>;
close TEXTIN;

my $edit_textname = 0;
for my $line (@@text) {
   next unless $line =~ m/((^|\b)https?:)(\S+)\*/;
   my ($prefix, $dirpat) = ($1, $3);
   my @@dir = glob "$dirpat*";
   if (@@dir == 1 and -d $dir[0]) {
      if ($line =~ s|$prefix$dirpat\*|$prefix$dir[0]/|) {
         $edit_textname = 1;
         print "$0: $prefix$dir[0]\n";
      }
   }elsif (@@dir > 1) {
      warn "$dirpat*: more than one match\n";
   }
}
    
if ($edit_textname) {
   system "cid -is $textname";
   open TEXTOUT, ">$textname" or die "$textname: $!\n";
   print "$0: open >$textname: OK\n" if $verbose;
   print TEXTOUT @@text; 
   close TEXTOUT;
}

for my $line (@@text) {
   $line =~ s|[&<>]|$htchars{$&}|g;
   $line =~ s{(^|\b)https?:\S+}{<A HREF=$&>$&</A>}g;
}

my $titlename = $textname;
$titlename =~ s/\.(txt|text|cat)$//;
my $htmlname = "$titlename.html";

my $pwd = qx(pwd);
chomp $pwd;
$pwd =~ s|/afs/cats.ucsc.edu/courses/||;

open HTMLOUT, ">$htmlname" or die "$htmlname: $!\n";
print STDERR "open >$htmlname: # OK\n" if $verbose;
my $head = $headtext;
$head =~ s/~title~/$textname/;
print HTMLOUT $head;
print HTMLOUT @@text;
print HTMLOUT "</PRE>\n</DIV>\n</BODY>\n";
close HTMLOUT;

system "ls -laofg $textname $htmlname" if $verbose;

@


1.39
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.38 2020-11-18 14:42:30-08 - - $
d53 2
a54 2
      color: $COLOR{FG_PLAIN} !important;
      background-color: $COLOR{BG_EMPTY} !important;
@


1.38
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.37 2020-11-18 13:54:12-08 - - $
d51 9
a59 9
#  <STYLE> 
#  BODY {
#     color: $COLOR{FG_PLAIN} !important;
#     background-color: $COLOR{BG_EMPTY} !important;
#  }
#  A:link {color: $COLOR{FG_LINK}}
#  A:visited {color: $COLOR{FG_VISITED}}
#  A:hover {color: $COLOR{FG_HOVER}}
#  </STYLE>
@


1.37
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.35 2020-09-01 13:55:14-07 - - $
d51 9
a59 9
   <STYLE> 
   BODY {
      color: $COLOR{FG_PLAIN} !important;
      background-color: $COLOR{BG_EMPTY} !important;
   }
   A:link {color: $COLOR{FG_LINK}}
   A:visited {color: $COLOR{FG_VISITED}}
   A:hover {color: $COLOR{FG_HOVER}}
   </STYLE>
d64 1
@


1.36
log
@-
@
text
@d25 1
a25 1
#use HTML_Colors;
d46 1
a46 19
#my %COLOR = HTML_Colors;
#
#my $headtext = <<__END_HEADTEXT__;
#   <HEAD>
#   <TITLE>~title~</TITLE>
#   <STYLE> 
#   BODY {
#      color: $COLOR{FG_PLAIN} !important;
#      background-color: $COLOR{BG_EMPTY} !important;
#   }
#   A:link {color: $COLOR{FG_LINK}}
#   A:visited {color: $COLOR{FG_VISITED}}
#   A:hover {color: $COLOR{FG_HOVER}}
#   </STYLE>
#   </HEAD> 
#   <BODY>
#   <PRE>
#__END_HEADTEXT__
#$headtext =~ s/^\s{3}//gm;
d49 14
a62 2
<TITLE>~title~</TITLE>
<PRE>
d64 1
@


1.35
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.34 2020-08-30 21:07:32-07 - - $
d25 1
a25 1
use HTML_Colors;
d46 19
a64 1
my %COLOR = HTML_Colors;
d67 2
a68 14
   <HEAD>
   <TITLE>~title~</TITLE>
   <STYLE> 
   BODY {
      color: $COLOR{FG_PLAIN} !important;
      background-color: $COLOR{BG_EMPTY} !important;
   }
   A:link {color: $COLOR{FG_LINK}}
   A:visited {color: $COLOR{FG_VISITED}}
   A:hover {color: $COLOR{FG_HOVER}}
   </STYLE>
   </HEAD> 
   <BODY>
   <PRE>
a69 1
$headtext =~ s/^\s{3}//gm;
@


1.34
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.33 2020-08-22 13:35:33-07 - - $
a55 3
   DIV.TXT {
      margin-left: 1em;
   }
a61 1
   <DIV class="TXT">
@


1.33
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.32 2020-08-22 12:59:44-07 - - $
a46 10

# my %COLOR = (
# 
#    BG_EMPTY   => "#000000", # black
#    FG_HOVER   => "#FF0000", # red
#    FG_LINK    => "#FFFF00", # yellow
#    FG_PLAIN   => "#00FF00", # green
#    FG_VISITED => "#00FFFF", # cyan
# 
# );
@


1.32
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.31 2020-08-22 12:52:07-07 - - $
d19 1
a19 1
use lib "/afs/cats.ucsc.edu/courses/cse110a-wm/bin";
@


1.31
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.30 2020-08-20 17:10:12-07 - - $
d19 2
d23 1
@


1.30
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.29 2020-08-20 13:20:42-07 - - $
d22 1
d43 1
a43 1
my %COLOR = (
d45 9
a53 7
   BG_EMPTY   => "#000000", # black
   FG_HOVER   => "#FF0000", # red
   FG_LINK    => "#FFFF00", # yellow
   FG_PLAIN   => "#00FF00", # green
   FG_VISITED => "#00FFFF", # cyan

);
@


1.29
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.28 2020-08-20 13:19:26-07 - - $
d112 1
a112 1
my $pwd = `pwd`;
@


1.28
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.27 2020-08-20 13:14:54-07 - - $
d125 1
a125 1
system "ls -laofg $textname $htmlname";
@


1.27
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.26 2020-08-18 13:40:31-07 - - $
d21 1
d30 4
d76 1
a76 1
# print STDERR "open <$textname: OK\n";
d98 1
a98 1
   # print "$0: open >$textname: OK\n";
d117 1
a117 1
# print STDERR "open >$htmlname: # OK\n";
@


1.26
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.25 2020-08-02 02:34:28-07 - - $
d71 1
a71 1
print STDERR "open <$textname: OK\n";
d93 1
a93 1
   print "$0: open >$textname: OK\n";
d112 1
a112 1
print STDERR "open >$htmlname: OK\n";
@


1.25
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.24 2020-07-20 16:14:14-07 - - $
d39 1
a39 1
   BG_EMPTY   => "#1F1F1F", # dark gray
d91 1
a91 1
   system "cid + $textname";
@


1.24
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.23 2020-07-20 12:12:17-07 - - $
d43 1
a43 1
   FG_VISITEd => "#00FFFF", # cyan
d59 1
a59 1
   A:visited {color: $COLOR{FG_VISITEd}}
@


1.23
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.22 2020-07-13 14:19:33-07 - - $
d37 1
a37 1
my $bg_empty_color   = "#1F1F1F"; # dark gray
d39 7
a45 4
my $fg_hover_color   = "#FF0000"; # red
my $fg_link_color    = "#FFFF00"; # yellow
my $fg_plain_color   = "#00FF00"; # green
my $fg_visited_color = "#00FFFF"; # cyan
d52 2
a53 2
      color: $fg_plain_color !important;
      background-color: $bg_empty_color !important;
d58 3
a60 3
   A:link {color: $fg_link_color}
   A:visited {color: $fg_visited_color}
   A:hover {color: $fg_hover_color}
@


1.22
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.21 2020-07-11 16:41:51-07 - - $
d5 1
a5 1
#    txt2html - convert text file to html, editing http: strings
d11 1
a11 1
#    Reads textfile to replace strings of the form http:\S+*
d14 1
a14 1
#    all http: strings into an html link.  The file is created
@


1.21
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.18 2020-07-10 16:09:32-07 - - $
d37 1
a37 1
my $bg_empty_color   = "#2F2F2F"; # dark gray
@


1.20
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.19 2020-07-11 16:31:58-07 - - $
a18 6
BEGIN {
   push @@INC, "/afs/cats.ucsc.edu/courses/cse110a-wm/usr/share/perl5";
   $0 =~ m|^(.*)/| and push @@INC, $1;
}
require "html_color.perl-require";

d36 7
@


1.19
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.18 2020-07-10 16:09:32-07 - - $
d19 6
a41 7

my $bg_empty_color   = "#2F2F2F"; # dark gray

my $fg_hover_color   = "#FF0000"; # red
my $fg_link_color    = "#FFFF00"; # yellow
my $fg_plain_color   = "#00FF00"; # green
my $fg_visited_color = "#00FFFF"; # cyan
@


1.18
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.17 2020-07-09 21:16:25-07 - - $
d38 1
d40 1
a40 1
my $fg_link_color    = "#00FFFF"; # cyan
d42 1
a42 1
my $fg_visited_color = "#FFFF00"; # yellow
@


1.17
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.16 2020-07-09 21:11:37-07 - - $
d37 1
a37 1
my $bg_empty_color   = "#3F3F3F"; # dark gray
@


1.16
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.15 2020-07-08 19:47:21-07 - - $
d77 4
a80 1
      $edit_textname |= $line =~ s|$prefix$dirpat\*|$prefix$dir[0]/|;
d89 1
@


1.15
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.14 2020-07-08 17:17:55-07 - - $
d77 1
a77 2
      $line =~ s|$prefix$dirpat\*|$prefix$dir[0]/|;
      $edit_textname = 1;
@


1.14
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.13 2020-07-08 16:34:27-07 - - $
d37 5
a41 5
my $bg_empty_color   = "#5F5F5F";
my $fg_hover_color   = "#FF0000";
my $fg_link_color    = "#00FFFF";
my $fg_plain_color   = "#00FF00";
my $fg_visited_color = "#FFFF00";
@


1.13
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.12 2020-07-08 15:14:40-07 - - $
d37 1
a37 1
my $bg_empty_color   = "#6F6F6F";
@


1.12
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.11 2020-07-08 15:12:30-07 - - $
d37 1
a37 1
my $bg_empty_color   = "#3F3F3F";
@


1.11
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.10 2020-07-08 11:35:47-07 - - $
d60 1
a60 1
   <DIV class="TXT">>
@


1.10
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.9 2020-07-08 00:52:59-07 - - $
d51 1
a51 1
   DIV {
d60 1
a60 1
   <DIV>
@


1.9
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.8 2020-07-08 00:28:34-07 - - $
d37 1
a37 1
my $bg_empty_color   = "#1F1F1F";
@


1.8
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.7 2020-07-07 21:50:04-07 - - $
d75 3
a77 3
   my $dir = glob "$dirpat*";
   if (defined $dir and -d $dir) {
      $line =~ s|$prefix$dirpat\*|$prefix$dir/|;
d79 2
@


1.7
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.6 2020-07-07 21:47:01-07 - - $
d45 1
a45 1
   <TITLE>~title</TITLE>
d71 1
d76 11
a86 2
   next unless defined $dir and -d $dir;
   $line =~ s|$prefix$dirpat\*|$prefix$dir/|;
d105 1
a105 1
$head =~ s/~title/$textname/;
@


1.6
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.5 2020-07-04 18:04:24-07 - - $
d32 1
a32 15
   exit
}

my $textname = shift;
open TEXTIN, "<$textname" or die "$textname: $!\n";
print STDERR "open <$textname: OK\n";
my @@text = <TEXTIN>;
close TEXTIN;

for my $line (@@text) {
   next unless $line =~ m/((^|\b)https?:)(\S+)\*/;
   my ($prefix, $dirpat) = ($1, $3);
   my $dir = glob "$dirpat*";
   next unless defined $dir and -d $dir;
   $line =~ s|$prefix$dirpat\*|$prefix$dir/|;
a35 12
for my $line (@@text) {
   $line =~ s|[&<>]|$htchars{$&}|g;
   $line =~ s{(^|\b)https?:\S+}{<A HREF=$&>$&</A>}g;
}

my $titlename = $textname;
$titlename =~ s/\.(txt|text|cat)$//;
my $htmlname = "$titlename.html";

my $pwd = `pwd`;
chomp $pwd;
$pwd =~ s|/afs/cats.ucsc.edu/courses/||;
d45 1
a45 1
   <TITLE>~$pwd/$titlename</TITLE>
d65 27
d94 3
a96 2
print HTMLOUT $headtext;
print HTMLOUT "<PRE>\n";
@


1.5
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.4 2020-07-03 21:22:23-07 - - $
a47 5

system "cid + $textname";
open TEXTOUT, ">$textname" or die "$textname: $!\n";
print TEXTOUT @@text;
close TEXTOUT;
@


1.4
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.3 2020-07-03 21:12:30-07 - - $
d74 19
a92 19
my @@headtext = <<__END_HEADTEXT__;
<HEAD>
<TITLE>~$pwd/$titlename</TITLE>
<STYLE> 
BODY {
   color: $fg_plain_color !important;
   background-color: $bg_empty_color !important;
}
DIV {
   margin-left: 1em;
}
A:link {color: $fg_link_color}
A:visited {color: $fg_visited_color}
A:hover {color: $fg_hover_color}
</STYLE>
</HEAD> 
<BODY>
<DIV>
<PRE>
d94 1
d98 1
a98 1
print HTMLOUT @@headtext;
@


1.3
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.2 2020-01-22 16:33:28-08 - - $
d78 1
a78 1
body {
d82 3
d91 2
d100 1
a100 1
print HTMLOUT "</PRE>\n</BODY>\n";
@


1.2
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.1 2019-10-31 13:32:24-07 - - $
d68 1
a68 1
my $bg_empty_color   = "#2F2F2F";
d71 1
a71 1
my $fg_plain_color   = "#2FFF2F";
@


1.1
log
@-
@
text
@d2 1
a2 1
# $Id: txt2html,v 1.25 2014-12-17 12:49:15-08 - - $
d75 13
a87 13
   <HEAD>
   <TITLE>~$pwd/$titlename</TITLE>
   <STYLE> 
   body {
      color: $fg_plain_color !important;
      background-color: $bg_empty_color !important;
   }
   A:link {color: $fg_link_color}
   A:visited {color: $fg_visited_color}
   A:hover {color: $fg_hover_color}
   </STYLE>
   </HEAD> 
   <BODY>
a88 1
map {s/^   //mg} @@headtext;
@
